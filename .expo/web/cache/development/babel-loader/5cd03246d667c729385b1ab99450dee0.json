{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AppStyles from \"../styles/AppStyles\";\nimport InlineTextButton from \"../components/InlineTextButton\";\nimport React from 'react';\nimport { auth } from \"../firebase\";\nimport { createUserWithEmailAndPassword, sendEmailVerification } from \"firebase/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SignUp(_ref) {\n  var navigation = _ref.navigation;\n  var background = require(\"../assets/background.jpg\");\n  var _React$useState = React.useState(\"\"),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    email = _React$useState2[0],\n    setEmail = _React$useState2[1];\n  var _React$useState3 = React.useState(\"\"),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    password = _React$useState4[0],\n    setPassword = _React$useState4[1];\n  var _React$useState5 = React.useState(\"\"),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    confirmPassword = _React$useState6[0],\n    setConfirmPassword = _React$useState6[1];\n  var _React$useState7 = React.useState(\"\"),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    validationMessage = _React$useState8[0],\n    setValidationMessage = _React$useState8[1];\n  var validateAndSet = function validateAndSet(value, valueToCompare, setValue) {\n    if (value !== valueToCompare) {\n      setValidationMessage(\"Passwords do not match.\");\n    } else {\n      setValidationMessage(\"\");\n    }\n    setValue(value);\n  };\n  var signUp = function signUp() {\n    if (password === confirmPassword) {\n      createUserWithEmailAndPassword(auth, email, password).then(function (userCredential) {\n        sendEmailVerification(auth.currentUser);\n        navigation.navigate(\"ToDo\", {\n          user: userCredential.user\n        });\n      }).catch(function (error) {\n        setValidationMessage(error.message);\n      });\n    }\n  };\n  return _jsx(ImageBackground, {\n    style: AppStyles.imageContainer,\n    source: background,\n    children: _jsxs(KeyboardAvoidingView, {\n      style: AppStyles.backgroundCover,\n      behavior: Platform.OS === \"ios\" ? \"padding\" : null,\n      keyboardVerticalOffset: 60,\n      children: [_jsx(Text, {\n        style: [AppStyles.lightText, AppStyles.header],\n        children: \"Luo k\\xE4ytt\\xE4j\\xE4tili\"\n      }), _jsx(Text, {\n        style: [AppStyles.errorText],\n        children: validationMessage\n      }), _jsx(TextInput, {\n        style: [AppStyles.textInput, AppStyles.lightTextInput, AppStyles.lightText],\n        placeholder: \"S\\xE4hk\\xF6posti\",\n        placeholderTextColor: \"#BEBEBE\",\n        value: email,\n        onChangeText: setEmail\n      }), _jsx(TextInput, {\n        style: [AppStyles.textInput, AppStyles.lightTextInput, AppStyles.lightText],\n        placeholder: \"Salasana\",\n        placeholderTextColor: \"#BEBEBE\",\n        secureTextEntry: true,\n        value: password,\n        onChangeText: function onChangeText(value) {\n          return validateAndSet(value, confirmPassword, setPassword);\n        }\n      }), _jsx(TextInput, {\n        style: [AppStyles.textInput, AppStyles.lightTextInput, AppStyles.lightText],\n        placeholder: \"Vahvista salasana\",\n        placeholderTextColor: \"#BEBEBE\",\n        secureTextEntry: true,\n        value: confirmPassword,\n        onChangeText: function onChangeText(value) {\n          return validateAndSet(value, password, setConfirmPassword);\n        }\n      }), _jsxs(View, {\n        style: [AppStyles.rowContainer, AppStyles.topMargin],\n        children: [_jsx(Text, {\n          style: AppStyles.lightText,\n          children: \"Minulla on jo k\\xE4ytt\\xE4j\\xE4tili? \"\n        }), _jsx(InlineTextButton, {\n          text: \"Kirjaudu sis\\xE4\\xE4n\",\n          onPress: function onPress() {\n            return navigation.popToTop();\n          }\n        })]\n      }), _jsx(Button, {\n        title: \"Luo k\\xE4ytt\\xE4j\\xE4tili\",\n        onPress: signUp,\n        color: \"#f7b267\"\n      })]\n    })\n  });\n}","map":{"version":3,"names":["AppStyles","InlineTextButton","React","auth","createUserWithEmailAndPassword","sendEmailVerification","SignUp","navigation","background","require","useState","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","validationMessage","setValidationMessage","validateAndSet","value","valueToCompare","setValue","signUp","then","userCredential","currentUser","navigate","user","catch","error","message","imageContainer","backgroundCover","Platform","OS","lightText","header","errorText","textInput","lightTextInput","rowContainer","topMargin","popToTop"],"sources":["/Users/tmetsasi/Desktop/Projects/PartyGame/party-game-app/screens/SignUp.js"],"sourcesContent":["import { Text, View, TextInput, ImageBackground, Button, KeyboardAvoidingView, Platform } from 'react-native';\nimport AppStyles from '../styles/AppStyles';\nimport InlineTextButton from '../components/InlineTextButton';\nimport React from 'react';\nimport { auth } from \"../firebase\";\nimport { createUserWithEmailAndPassword, sendEmailVerification } from \"firebase/auth\";\n\nexport default function SignUp({ navigation }) {\n  const background = require(\"../assets/background.jpg\");\n\n  let [email, setEmail] = React.useState(\"\");\n  let [password, setPassword] = React.useState(\"\");\n  let [confirmPassword, setConfirmPassword] = React.useState(\"\");\n  let [validationMessage, setValidationMessage] = React.useState(\"\");\n\n  let validateAndSet = (value, valueToCompare, setValue) => {\n    if (value !== valueToCompare) {\n      setValidationMessage(\"Passwords do not match.\");\n    } else {\n      setValidationMessage(\"\");\n    }\n\n    setValue(value);\n  };\n\n  let signUp = () => {\n    if (password === confirmPassword) {\n      createUserWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        sendEmailVerification(auth.currentUser);\n        navigation.navigate(\"ToDo\", { user: userCredential.user });\n      })\n      .catch((error) => {\n        setValidationMessage(error.message);\n      });\n    }\n  }\n\n  return (\n    <ImageBackground style={AppStyles.imageContainer} source={background}>\n      <KeyboardAvoidingView \n        style={AppStyles.backgroundCover} \n        behavior={Platform.OS === \"ios\" ? \"padding\" : null}\n        keyboardVerticalOffset={60}>\n        <Text style={[AppStyles.lightText, AppStyles.header]}>Luo käyttäjätili</Text>\n        <Text style={[AppStyles.errorText]}>{validationMessage}</Text>\n        <TextInput \n          style={[AppStyles.textInput, AppStyles.lightTextInput, AppStyles.lightText]} \n          placeholder='Sähköposti' \n          placeholderTextColor=\"#BEBEBE\"\n          value={email}\n          onChangeText={setEmail} />\n        <TextInput \n          style={[AppStyles.textInput, AppStyles.lightTextInput, AppStyles.lightText]} \n          placeholder='Salasana' \n          placeholderTextColor=\"#BEBEBE\" \n          secureTextEntry={true} \n          value={password} \n          onChangeText={(value) => validateAndSet(value, confirmPassword, setPassword)} />\n        <TextInput \n          style={[AppStyles.textInput, AppStyles.lightTextInput, AppStyles.lightText]} \n          placeholder='Vahvista salasana' \n          placeholderTextColor=\"#BEBEBE\" \n          secureTextEntry={true} \n          value={confirmPassword} \n          onChangeText={(value) => validateAndSet(value, password, setConfirmPassword)} />\n        <View style={[AppStyles.rowContainer, AppStyles.topMargin]}>\n          <Text style={AppStyles.lightText}>Minulla on jo käyttäjätili? </Text>\n          <InlineTextButton text=\"Kirjaudu sisään\" onPress={() => navigation.popToTop()} />\n        </View>\n        <Button title=\"Luo käyttäjätili\" onPress={signUp} color=\"#f7b267\" />\n      </KeyboardAvoidingView>\n    </ImageBackground>\n  );\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}