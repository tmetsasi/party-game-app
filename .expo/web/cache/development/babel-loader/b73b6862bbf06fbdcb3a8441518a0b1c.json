{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport React from 'react';\nimport AppStyles from \"../styles/AppStyles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function AddToDoModal(props) {\n  var _React$useState = React.useState(\"\"),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    todo = _React$useState2[0],\n    setTodo = _React$useState2[1];\n  return _jsxs(View, {\n    style: AppStyles.container,\n    children: [_jsx(Text, {\n      style: AppStyles.header,\n      children: \"Add ToDo\"\n    }), _jsx(TextInput, {\n      style: [AppStyles.textInput, AppStyles.darkTextInput],\n      placeholder: \"ToDo\",\n      value: todo,\n      onChangeText: setTodo\n    }), _jsxs(View, {\n      style: [AppStyles.rowContainer, AppStyles.rightAligned, AppStyles.rightMargin],\n      children: [_jsx(Button, {\n        title: \"Cancel\",\n        onPress: props.onClose\n      }), _jsx(Button, {\n        title: \"OK\",\n        onPress: function onPress() {\n          props.addToDo(todo);\n          setTodo(\"\");\n          props.onClose();\n        }\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","AppStyles","AddToDoModal","props","useState","todo","setTodo","container","header","textInput","darkTextInput","rowContainer","rightAligned","rightMargin","onClose","addToDo"],"sources":["/Users/tmetsasi/Desktop/Projects/PartyGame/party-game-app/components/AddToDoModal.js"],"sourcesContent":["import { View, Text, TextInput, Button } from 'react-native';\nimport React from 'react';\nimport AppStyles from '../styles/AppStyles';\n\nexport default function AddToDoModal(props) {\n  let [todo, setTodo] = React.useState(\"\");\n  return (\n    <View style={AppStyles.container}>\n      <Text style={AppStyles.header}>Add ToDo</Text>\n      <TextInput \n          style={[AppStyles.textInput, AppStyles.darkTextInput]} \n          placeholder='ToDo'\n          value={todo}\n          onChangeText={setTodo} />\n      <View style={[AppStyles.rowContainer, AppStyles.rightAligned, AppStyles.rightMargin]}>\n        <Button title=\"Cancel\" onPress={props.onClose} />\n        <Button title=\"OK\" onPress={() => {\n          props.addToDo(todo);\n          setTodo(\"\");\n          props.onClose();\n        }} />\n      </View>\n    </View>\n  );\n}"],"mappings":";;;;;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS;AAA4B;AAAA;AAE5C,eAAe,SAASC,YAAY,CAACC,KAAK,EAAE;EAC1C,sBAAsBH,KAAK,CAACI,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAnCC,IAAI;IAAEC,OAAO;EAClB,OACE,MAAC,IAAI;IAAC,KAAK,EAAEL,SAAS,CAACM,SAAU;IAAA,WAC/B,KAAC,IAAI;MAAC,KAAK,EAAEN,SAAS,CAACO,MAAO;MAAA,UAAC;IAAQ,EAAO,EAC9C,KAAC,SAAS;MACN,KAAK,EAAE,CAACP,SAAS,CAACQ,SAAS,EAAER,SAAS,CAACS,aAAa,CAAE;MACtD,WAAW,EAAC,MAAM;MAClB,KAAK,EAAEL,IAAK;MACZ,YAAY,EAAEC;IAAQ,EAAG,EAC7B,MAAC,IAAI;MAAC,KAAK,EAAE,CAACL,SAAS,CAACU,YAAY,EAAEV,SAAS,CAACW,YAAY,EAAEX,SAAS,CAACY,WAAW,CAAE;MAAA,WACnF,KAAC,MAAM;QAAC,KAAK,EAAC,QAAQ;QAAC,OAAO,EAAEV,KAAK,CAACW;MAAQ,EAAG,EACjD,KAAC,MAAM;QAAC,KAAK,EAAC,IAAI;QAAC,OAAO,EAAE,mBAAM;UAChCX,KAAK,CAACY,OAAO,CAACV,IAAI,CAAC;UACnBC,OAAO,CAAC,EAAE,CAAC;UACXH,KAAK,CAACW,OAAO,EAAE;QACjB;MAAE,EAAG;IAAA,EACA;EAAA,EACF;AAEX"},"metadata":{},"sourceType":"module"}