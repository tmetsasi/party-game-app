{"ast":null,"code":"import { getHeaderTitle, Header, HeaderBackButton, SafeAreaProviderCompat, Screen } from '@react-navigation/elements';\nimport * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nvar TRANSPARENT_PRESENTATIONS = ['transparentModal', 'containedTransparentModal'];\nexport default function NativeStackView(_ref) {\n  var state = _ref.state,\n    descriptors = _ref.descriptors;\n  return React.createElement(SafeAreaProviderCompat, null, React.createElement(View, {\n    style: styles.container\n  }, state.routes.map(function (route, i) {\n    var _state$routes, _state$routes2;\n    var isFocused = state.index === i;\n    var canGoBack = i !== 0;\n    var previousKey = (_state$routes = state.routes[i - 1]) === null || _state$routes === void 0 ? void 0 : _state$routes.key;\n    var nextKey = (_state$routes2 = state.routes[i + 1]) === null || _state$routes2 === void 0 ? void 0 : _state$routes2.key;\n    var previousDescriptor = previousKey ? descriptors[previousKey] : undefined;\n    var nexDescriptor = nextKey ? descriptors[nextKey] : undefined;\n    var _descriptors$route$ke = descriptors[route.key],\n      options = _descriptors$route$ke.options,\n      navigation = _descriptors$route$ke.navigation,\n      render = _descriptors$route$ke.render;\n    var header = options.header,\n      headerShown = options.headerShown,\n      headerTintColor = options.headerTintColor,\n      headerBackImageSource = options.headerBackImageSource,\n      headerLeft = options.headerLeft,\n      headerRight = options.headerRight,\n      headerTitle = options.headerTitle,\n      headerTitleAlign = options.headerTitleAlign,\n      headerTitleStyle = options.headerTitleStyle,\n      headerStyle = options.headerStyle,\n      headerShadowVisible = options.headerShadowVisible,\n      headerTransparent = options.headerTransparent,\n      headerBackTitle = options.headerBackTitle,\n      presentation = options.presentation,\n      contentStyle = options.contentStyle;\n    var nextPresentation = nexDescriptor === null || nexDescriptor === void 0 ? void 0 : nexDescriptor.options.presentation;\n    return React.createElement(Screen, {\n      key: route.key,\n      focused: isFocused,\n      route: route,\n      navigation: navigation,\n      headerShown: headerShown,\n      headerTransparent: headerTransparent,\n      header: header !== undefined ? header({\n        back: previousDescriptor ? {\n          title: getHeaderTitle(previousDescriptor.options, previousDescriptor.route.name)\n        } : undefined,\n        options: options,\n        route: route,\n        navigation: navigation\n      }) : React.createElement(Header, {\n        title: getHeaderTitle(options, route.name),\n        headerTintColor: headerTintColor,\n        headerLeft: typeof headerLeft === 'function' ? function (_ref2) {\n          var tintColor = _ref2.tintColor;\n          return headerLeft({\n            tintColor: tintColor,\n            canGoBack: canGoBack,\n            label: headerBackTitle\n          });\n        } : headerLeft === undefined && canGoBack ? function (_ref3) {\n          var tintColor = _ref3.tintColor;\n          return React.createElement(HeaderBackButton, {\n            tintColor: tintColor,\n            backImage: headerBackImageSource !== undefined ? function () {\n              return React.createElement(Image, {\n                source: headerBackImageSource,\n                style: [styles.backImage, {\n                  tintColor: tintColor\n                }]\n              });\n            } : undefined,\n            onPress: navigation.goBack,\n            canGoBack: canGoBack\n          });\n        } : headerLeft,\n        headerRight: typeof headerRight === 'function' ? function (_ref4) {\n          var tintColor = _ref4.tintColor;\n          return headerRight({\n            tintColor: tintColor,\n            canGoBack: canGoBack\n          });\n        } : headerRight,\n        headerTitle: typeof headerTitle === 'function' ? function (_ref5) {\n          var children = _ref5.children,\n            tintColor = _ref5.tintColor;\n          return headerTitle({\n            children: children,\n            tintColor: tintColor\n          });\n        } : headerTitle,\n        headerTitleAlign: headerTitleAlign,\n        headerTitleStyle: headerTitleStyle,\n        headerStyle: [headerTransparent ? {\n          position: 'absolute',\n          backgroundColor: 'transparent'\n        } : null, headerStyle, headerShadowVisible === false ? {\n          shadowOpacity: 0,\n          borderBottomWidth: 0\n        } : null]\n      }),\n      style: [StyleSheet.absoluteFill, {\n        display: isFocused || nextPresentation != null && TRANSPARENT_PRESENTATIONS.includes(nextPresentation) ? 'flex' : 'none'\n      }, presentation != null && TRANSPARENT_PRESENTATIONS.includes(presentation) ? {\n        backgroundColor: 'transparent'\n      } : null]\n    }, React.createElement(View, {\n      style: [styles.contentContainer, contentStyle]\n    }, render()));\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  contentContainer: {\n    flex: 1\n  },\n  backImage: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain'\n  }\n});","map":{"version":3,"mappings":"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","names":["getHeaderTitle","Header","HeaderBackButton","SafeAreaProviderCompat","Screen","React","TRANSPARENT_PRESENTATIONS","NativeStackView","state","_ref","descriptors","View","style","styles","container","routes","map","route","i","isFocused","index","canGoBack","previousKey","_state$routes","key","nextKey","_state$routes2","previousDescriptor","undefined","nexDescriptor","options","navigation","render","header","headerShown","headerTintColor","headerBackImageSource","headerLeft","headerRight","headerTitle","headerTitleAlign","headerTitleStyle","headerStyle","headerShadowVisible","headerTransparent","headerBackTitle","presentation","contentStyle","nextPresentation","focused","back","title","name","tintColor","_ref2","label","_ref3","backImage","Image","source","onPress","goBack","_ref4","children","_ref5","position","backgroundColor","shadowOpacity","borderBottomWidth","StyleSheet","absoluteFill","display","includes","contentContainer","create","flex","height","width","margin","resizeMode"],"sources":["NativeStackView.tsx"],"sourcesContent":["import {\n  getHeaderTitle,\n  Header,\n  HeaderBackButton,\n  SafeAreaProviderCompat,\n  Screen,\n} from '@react-navigation/elements';\nimport type {\n  ParamListBase,\n  StackNavigationState,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Image, StyleSheet, View } from 'react-native';\n\nimport type {\n  NativeStackDescriptorMap,\n  NativeStackNavigationHelpers,\n} from '../types';\n\ntype Props = {\n  state: StackNavigationState<ParamListBase>;\n  // This is used for the native implementation of the stack.\n  // eslint-disable-next-line react/no-unused-prop-types\n  navigation: NativeStackNavigationHelpers;\n  descriptors: NativeStackDescriptorMap;\n};\n\nconst TRANSPARENT_PRESENTATIONS = [\n  'transparentModal',\n  'containedTransparentModal',\n];\n\nexport default function NativeStackView({ state, descriptors }: Props) {\n  return (\n    <SafeAreaProviderCompat>\n      <View style={styles.container}>\n        {state.routes.map((route, i) => {\n          const isFocused = state.index === i;\n          const canGoBack = i !== 0;\n          const previousKey = state.routes[i - 1]?.key;\n          const nextKey = state.routes[i + 1]?.key;\n          const previousDescriptor = previousKey\n            ? descriptors[previousKey]\n            : undefined;\n          const nexDescriptor = nextKey ? descriptors[nextKey] : undefined;\n          const { options, navigation, render } = descriptors[route.key];\n\n          const {\n            header,\n            headerShown,\n            headerTintColor,\n            headerBackImageSource,\n            headerLeft,\n            headerRight,\n            headerTitle,\n            headerTitleAlign,\n            headerTitleStyle,\n            headerStyle,\n            headerShadowVisible,\n            headerTransparent,\n            headerBackTitle,\n            presentation,\n            contentStyle,\n          } = options;\n\n          const nextPresentation = nexDescriptor?.options.presentation;\n\n          return (\n            <Screen\n              key={route.key}\n              focused={isFocused}\n              route={route}\n              navigation={navigation}\n              headerShown={headerShown}\n              headerTransparent={headerTransparent}\n              header={\n                header !== undefined ? (\n                  header({\n                    back: previousDescriptor\n                      ? {\n                          title: getHeaderTitle(\n                            previousDescriptor.options,\n                            previousDescriptor.route.name\n                          ),\n                        }\n                      : undefined,\n                    options,\n                    route,\n                    navigation,\n                  })\n                ) : (\n                  <Header\n                    title={getHeaderTitle(options, route.name)}\n                    headerTintColor={headerTintColor}\n                    headerLeft={\n                      typeof headerLeft === 'function'\n                        ? ({ tintColor }) =>\n                            headerLeft({\n                              tintColor,\n                              canGoBack,\n                              label: headerBackTitle,\n                            })\n                        : headerLeft === undefined && canGoBack\n                        ? ({ tintColor }) => (\n                            <HeaderBackButton\n                              tintColor={tintColor}\n                              backImage={\n                                headerBackImageSource !== undefined\n                                  ? () => (\n                                      <Image\n                                        source={headerBackImageSource}\n                                        style={[\n                                          styles.backImage,\n                                          { tintColor },\n                                        ]}\n                                      />\n                                    )\n                                  : undefined\n                              }\n                              onPress={navigation.goBack}\n                              canGoBack={canGoBack}\n                            />\n                          )\n                        : headerLeft\n                    }\n                    headerRight={\n                      typeof headerRight === 'function'\n                        ? ({ tintColor }) =>\n                            headerRight({ tintColor, canGoBack })\n                        : headerRight\n                    }\n                    headerTitle={\n                      typeof headerTitle === 'function'\n                        ? ({ children, tintColor }) =>\n                            headerTitle({ children, tintColor })\n                        : headerTitle\n                    }\n                    headerTitleAlign={headerTitleAlign}\n                    headerTitleStyle={headerTitleStyle}\n                    headerStyle={[\n                      headerTransparent\n                        ? {\n                            position: 'absolute',\n                            backgroundColor: 'transparent',\n                          }\n                        : null,\n                      headerStyle,\n                      headerShadowVisible === false\n                        ? { shadowOpacity: 0, borderBottomWidth: 0 }\n                        : null,\n                    ]}\n                  />\n                )\n              }\n              style={[\n                StyleSheet.absoluteFill,\n                {\n                  display:\n                    isFocused ||\n                    (nextPresentation != null &&\n                      TRANSPARENT_PRESENTATIONS.includes(nextPresentation))\n                      ? 'flex'\n                      : 'none',\n                },\n                presentation != null &&\n                TRANSPARENT_PRESENTATIONS.includes(presentation)\n                  ? { backgroundColor: 'transparent' }\n                  : null,\n              ]}\n            >\n              <View style={[styles.contentContainer, contentStyle]}>\n                {render()}\n              </View>\n            </Screen>\n          );\n        })}\n      </View>\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  contentContainer: {\n    flex: 1,\n  },\n  backImage: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}