{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{nanoid}from'nanoid/non-secure';import BaseRouter from\"./BaseRouter\";var TYPE_ROUTE='route';export var TabActions={jumpTo:function jumpTo(name,params){return{type:'JUMP_TO',payload:{name:name,params:params}};}};var getRouteHistory=function getRouteHistory(routes,index,backBehavior,initialRouteName){var history=[{type:TYPE_ROUTE,key:routes[index].key}];var initialRouteIndex;switch(backBehavior){case'order':for(var i=index;i>0;i--){history.unshift({type:TYPE_ROUTE,key:routes[i-1].key});}break;case'firstRoute':if(index!==0){history.unshift({type:TYPE_ROUTE,key:routes[0].key});}break;case'initialRoute':initialRouteIndex=routes.findIndex(function(route){return route.name===initialRouteName;});initialRouteIndex=initialRouteIndex===-1?0:initialRouteIndex;if(index!==initialRouteIndex){history.unshift({type:TYPE_ROUTE,key:routes[initialRouteIndex].key});}break;case'history':break;}return history;};var changeIndex=function changeIndex(state,index,backBehavior,initialRouteName){var history;if(backBehavior==='history'){var currentKey=state.routes[index].key;history=state.history.filter(function(it){return it.type==='route'?it.key!==currentKey:false;}).concat({type:TYPE_ROUTE,key:currentKey});}else{history=getRouteHistory(state.routes,index,backBehavior,initialRouteName);}return _objectSpread(_objectSpread({},state),{},{index:index,history:history});};export default function TabRouter(_ref){var initialRouteName=_ref.initialRouteName,_ref$backBehavior=_ref.backBehavior,backBehavior=_ref$backBehavior===void 0?'firstRoute':_ref$backBehavior;var router=_objectSpread(_objectSpread({},BaseRouter),{},{type:'tab',getInitialState:function getInitialState(_ref2){var routeNames=_ref2.routeNames,routeParamList=_ref2.routeParamList;var index=initialRouteName!==undefined&&routeNames.includes(initialRouteName)?routeNames.indexOf(initialRouteName):0;var routes=routeNames.map(function(name){return{name:name,key:name+\"-\"+nanoid(),params:routeParamList[name]};});var history=getRouteHistory(routes,index,backBehavior,initialRouteName);return{stale:false,type:'tab',key:\"tab-\"+nanoid(),index:index,routeNames:routeNames,history:history,routes:routes};},getRehydratedState:function getRehydratedState(partialState,_ref3){var routeNames=_ref3.routeNames,routeParamList=_ref3.routeParamList;var _state$routes,_state$index,_state$history$filter,_state$history;var state=partialState;if(state.stale===false){return state;}var routes=routeNames.map(function(name){var route=state.routes.find(function(r){return r.name===name;});return _objectSpread(_objectSpread({},route),{},{name:name,key:route&&route.name===name&&route.key?route.key:name+\"-\"+nanoid(),params:routeParamList[name]!==undefined?_objectSpread(_objectSpread({},routeParamList[name]),route?route.params:undefined):route?route.params:undefined});});var index=Math.min(Math.max(routeNames.indexOf((_state$routes=state.routes[(_state$index=state===null||state===void 0?void 0:state.index)!==null&&_state$index!==void 0?_state$index:0])===null||_state$routes===void 0?void 0:_state$routes.name),0),routes.length-1);var history=(_state$history$filter=(_state$history=state.history)===null||_state$history===void 0?void 0:_state$history.filter(function(it){return routes.find(function(r){return r.key===it.key;});}))!==null&&_state$history$filter!==void 0?_state$history$filter:[];return changeIndex({stale:false,type:'tab',key:\"tab-\"+nanoid(),index:index,routeNames:routeNames,history:history,routes:routes},index,backBehavior,initialRouteName);},getStateForRouteNamesChange:function getStateForRouteNamesChange(state,_ref4){var routeNames=_ref4.routeNames,routeParamList=_ref4.routeParamList,routeKeyChanges=_ref4.routeKeyChanges;var routes=routeNames.map(function(name){return state.routes.find(function(r){return r.name===name&&!routeKeyChanges.includes(r.name);})||{name:name,key:name+\"-\"+nanoid(),params:routeParamList[name]};});var index=Math.max(0,routeNames.indexOf(state.routes[state.index].name));var history=state.history.filter(function(it){return it.type!=='route'||routes.find(function(r){return r.key===it.key;});});if(!history.length){history=getRouteHistory(routes,index,backBehavior,initialRouteName);}return _objectSpread(_objectSpread({},state),{},{history:history,routeNames:routeNames,routes:routes,index:index});},getStateForRouteFocus:function getStateForRouteFocus(state,key){var index=state.routes.findIndex(function(r){return r.key===key;});if(index===-1||index===state.index){return state;}return changeIndex(state,index,backBehavior,initialRouteName);},getStateForAction:function getStateForAction(state,action,_ref5){var routeParamList=_ref5.routeParamList;switch(action.type){case'JUMP_TO':case'NAVIGATE':{var index=-1;if(action.type==='NAVIGATE'&&action.payload.key){index=state.routes.findIndex(function(route){return route.key===action.payload.key;});}else{index=state.routes.findIndex(function(route){return route.name===action.payload.name;});}if(index===-1){return null;}return changeIndex(_objectSpread(_objectSpread({},state),{},{routes:state.routes.map(function(route,i){if(i!==index){return route;}var params;if(action.type==='NAVIGATE'&&action.payload.merge){params=action.payload.params!==undefined||routeParamList[route.name]!==undefined?_objectSpread(_objectSpread(_objectSpread({},routeParamList[route.name]),route.params),action.payload.params):route.params;}else{params=routeParamList[route.name]!==undefined?_objectSpread(_objectSpread({},routeParamList[route.name]),action.payload.params):action.payload.params;}var path=action.type==='NAVIGATE'&&action.payload.path!=null?action.payload.path:route.path;return params!==route.params||path!==route.path?_objectSpread(_objectSpread({},route),{},{path:path,params:params}):route;})}),index,backBehavior,initialRouteName);}case'GO_BACK':{if(state.history.length===1){return null;}var previousKey=state.history[state.history.length-2].key;var _index=state.routes.findIndex(function(route){return route.key===previousKey;});if(_index===-1){return null;}return _objectSpread(_objectSpread({},state),{},{history:state.history.slice(0,-1),index:_index});}default:return BaseRouter.getStateForAction(state,action);}},shouldActionChangeFocus:function shouldActionChangeFocus(action){return action.type==='NAVIGATE';},actionCreators:TabActions});return router;}","map":{"version":3,"sources":["TabRouter.tsx"],"names":["nanoid","BaseRouter","TYPE_ROUTE","TabActions","jumpTo","name","params","type","payload","getRouteHistory","routes","index","backBehavior","initialRouteName","history","key","initialRouteIndex","i","unshift","findIndex","route","changeIndex","state","currentKey","filter","it","concat","TabRouter","router","getInitialState","routeNames","routeParamList","undefined","includes","indexOf","map","stale","getRehydratedState","partialState","find","r","Math","min","max","length","getStateForRouteNamesChange","routeKeyChanges","getStateForRouteFocus","getStateForAction","action","merge","path","previousKey","slice","shouldActionChangeFocus","actionCreators"],"mappings":"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","sourcesContent":["import { nanoid } from 'nanoid/non-secure';\n\nimport BaseRouter from './BaseRouter';\nimport type {\n  CommonNavigationAction,\n  DefaultRouterOptions,\n  NavigationState,\n  ParamListBase,\n  PartialState,\n  Route,\n  Router,\n} from './types';\n\nexport type TabActionType = {\n  type: 'JUMP_TO';\n  payload: { name: string; params?: object };\n  source?: string;\n  target?: string;\n};\n\nexport type BackBehavior =\n  | 'initialRoute'\n  | 'firstRoute'\n  | 'history'\n  | 'order'\n  | 'none';\n\nexport type TabRouterOptions = DefaultRouterOptions & {\n  backBehavior?: BackBehavior;\n};\n\nexport type TabNavigationState<ParamList extends ParamListBase> = Omit<\n  NavigationState<ParamList>,\n  'history'\n> & {\n  /**\n   * Type of the router, in this case, it's tab.\n   */\n  type: 'tab';\n  /**\n   * List of previously visited route keys.\n   */\n  history: { type: 'route'; key: string }[];\n};\n\nexport type TabActionHelpers<ParamList extends ParamListBase> = {\n  /**\n   * Jump to an existing tab.\n   *\n   * @param name Name of the route for the tab.\n   * @param [params] Params object for the route.\n   */\n  jumpTo<RouteName extends Extract<keyof ParamList, string>>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [screen: RouteName] | [screen: RouteName, params: ParamList[RouteName]]\n      : [screen: RouteName, params: ParamList[RouteName]]\n  ): void;\n};\n\nconst TYPE_ROUTE = 'route' as const;\n\nexport const TabActions = {\n  jumpTo(name: string, params?: object): TabActionType {\n    return { type: 'JUMP_TO', payload: { name, params } };\n  },\n};\n\nconst getRouteHistory = (\n  routes: Route<string>[],\n  index: number,\n  backBehavior: BackBehavior,\n  initialRouteName: string | undefined\n) => {\n  const history = [{ type: TYPE_ROUTE, key: routes[index].key }];\n  let initialRouteIndex;\n\n  switch (backBehavior) {\n    case 'order':\n      for (let i = index; i > 0; i--) {\n        history.unshift({ type: TYPE_ROUTE, key: routes[i - 1].key });\n      }\n      break;\n    case 'firstRoute':\n      if (index !== 0) {\n        history.unshift({\n          type: TYPE_ROUTE,\n          key: routes[0].key,\n        });\n      }\n      break;\n    case 'initialRoute':\n      initialRouteIndex = routes.findIndex(\n        (route) => route.name === initialRouteName\n      );\n      initialRouteIndex = initialRouteIndex === -1 ? 0 : initialRouteIndex;\n\n      if (index !== initialRouteIndex) {\n        history.unshift({\n          type: TYPE_ROUTE,\n          key: routes[initialRouteIndex].key,\n        });\n      }\n      break;\n    case 'history':\n      // The history will fill up on navigation\n      break;\n  }\n\n  return history;\n};\n\nconst changeIndex = (\n  state: TabNavigationState<ParamListBase>,\n  index: number,\n  backBehavior: BackBehavior,\n  initialRouteName: string | undefined\n) => {\n  let history;\n\n  if (backBehavior === 'history') {\n    const currentKey = state.routes[index].key;\n\n    history = state.history\n      .filter((it) => (it.type === 'route' ? it.key !== currentKey : false))\n      .concat({ type: TYPE_ROUTE, key: currentKey });\n  } else {\n    history = getRouteHistory(\n      state.routes,\n      index,\n      backBehavior,\n      initialRouteName\n    );\n  }\n\n  return {\n    ...state,\n    index,\n    history,\n  };\n};\n\nexport default function TabRouter({\n  initialRouteName,\n  backBehavior = 'firstRoute',\n}: TabRouterOptions) {\n  const router: Router<\n    TabNavigationState<ParamListBase>,\n    TabActionType | CommonNavigationAction\n  > = {\n    ...BaseRouter,\n\n    type: 'tab',\n\n    getInitialState({ routeNames, routeParamList }) {\n      const index =\n        initialRouteName !== undefined && routeNames.includes(initialRouteName)\n          ? routeNames.indexOf(initialRouteName)\n          : 0;\n\n      const routes = routeNames.map((name) => ({\n        name,\n        key: `${name}-${nanoid()}`,\n        params: routeParamList[name],\n      }));\n\n      const history = getRouteHistory(\n        routes,\n        index,\n        backBehavior,\n        initialRouteName\n      );\n\n      return {\n        stale: false,\n        type: 'tab',\n        key: `tab-${nanoid()}`,\n        index,\n        routeNames,\n        history,\n        routes,\n      };\n    },\n\n    getRehydratedState(partialState, { routeNames, routeParamList }) {\n      let state = partialState;\n\n      if (state.stale === false) {\n        return state;\n      }\n\n      const routes = routeNames.map((name) => {\n        const route = (\n          state as PartialState<TabNavigationState<ParamListBase>>\n        ).routes.find((r) => r.name === name);\n\n        return {\n          ...route,\n          name,\n          key:\n            route && route.name === name && route.key\n              ? route.key\n              : `${name}-${nanoid()}`,\n          params:\n            routeParamList[name] !== undefined\n              ? {\n                  ...routeParamList[name],\n                  ...(route ? route.params : undefined),\n                }\n              : route\n              ? route.params\n              : undefined,\n        } as Route<string>;\n      });\n\n      const index = Math.min(\n        Math.max(routeNames.indexOf(state.routes[state?.index ?? 0]?.name), 0),\n        routes.length - 1\n      );\n\n      const history =\n        state.history?.filter((it) => routes.find((r) => r.key === it.key)) ??\n        [];\n\n      return changeIndex(\n        {\n          stale: false,\n          type: 'tab',\n          key: `tab-${nanoid()}`,\n          index,\n          routeNames,\n          history,\n          routes,\n        },\n        index,\n        backBehavior,\n        initialRouteName\n      );\n    },\n\n    getStateForRouteNamesChange(\n      state,\n      { routeNames, routeParamList, routeKeyChanges }\n    ) {\n      const routes = routeNames.map(\n        (name) =>\n          state.routes.find(\n            (r) => r.name === name && !routeKeyChanges.includes(r.name)\n          ) || {\n            name,\n            key: `${name}-${nanoid()}`,\n            params: routeParamList[name],\n          }\n      );\n\n      const index = Math.max(\n        0,\n        routeNames.indexOf(state.routes[state.index].name)\n      );\n\n      let history = state.history.filter(\n        // Type will always be 'route' for tabs, but could be different in a router extending this (e.g. drawer)\n        (it) => it.type !== 'route' || routes.find((r) => r.key === it.key)\n      );\n\n      if (!history.length) {\n        history = getRouteHistory(\n          routes,\n          index,\n          backBehavior,\n          initialRouteName\n        );\n      }\n\n      return {\n        ...state,\n        history,\n        routeNames,\n        routes,\n        index,\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const index = state.routes.findIndex((r) => r.key === key);\n\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n\n      return changeIndex(state, index, backBehavior, initialRouteName);\n    },\n\n    getStateForAction(state, action, { routeParamList }) {\n      switch (action.type) {\n        case 'JUMP_TO':\n        case 'NAVIGATE': {\n          let index = -1;\n\n          if (action.type === 'NAVIGATE' && action.payload.key) {\n            index = state.routes.findIndex(\n              (route) => route.key === action.payload.key\n            );\n          } else {\n            index = state.routes.findIndex(\n              (route) => route.name === action.payload.name\n            );\n          }\n\n          if (index === -1) {\n            return null;\n          }\n\n          return changeIndex(\n            {\n              ...state,\n              routes: state.routes.map((route, i) => {\n                if (i !== index) {\n                  return route;\n                }\n\n                let params;\n\n                if (action.type === 'NAVIGATE' && action.payload.merge) {\n                  params =\n                    action.payload.params !== undefined ||\n                    routeParamList[route.name] !== undefined\n                      ? {\n                          ...routeParamList[route.name],\n                          ...route.params,\n                          ...action.payload.params,\n                        }\n                      : route.params;\n                } else {\n                  params =\n                    routeParamList[route.name] !== undefined\n                      ? {\n                          ...routeParamList[route.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params;\n                }\n\n                const path =\n                  action.type === 'NAVIGATE' && action.payload.path != null\n                    ? action.payload.path\n                    : route.path;\n\n                return params !== route.params || path !== route.path\n                  ? { ...route, path, params }\n                  : route;\n              }),\n            },\n            index,\n            backBehavior,\n            initialRouteName\n          );\n        }\n\n        case 'GO_BACK': {\n          if (state.history.length === 1) {\n            return null;\n          }\n\n          const previousKey = state.history[state.history.length - 2].key;\n          const index = state.routes.findIndex(\n            (route) => route.key === previousKey\n          );\n\n          if (index === -1) {\n            return null;\n          }\n\n          return {\n            ...state,\n            history: state.history.slice(0, -1),\n            index,\n          };\n        }\n\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n\n    shouldActionChangeFocus(action) {\n      return action.type === 'NAVIGATE';\n    },\n\n    actionCreators: TabActions,\n  };\n\n  return router;\n}\n"]},"metadata":{},"sourceType":"module"}