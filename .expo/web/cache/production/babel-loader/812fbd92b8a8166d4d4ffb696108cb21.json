{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";export default function fromEntries(entries){return entries.reduce(function(acc,_ref){var _ref2=_slicedToArray(_ref,2),k=_ref2[0],v=_ref2[1];if(acc.hasOwnProperty(k)){throw new Error(\"A value for key '\"+k+\"' already exists in the object.\");}acc[k]=v;return acc;},{});}","map":{"version":3,"mappings":"iEACA,cAAe,SAASA,YAAT,CACbC,OADa,CAEb,CACA,MAAOA,QAAO,CAACC,MAAR,CAAe,SAACC,GAAD,MAAiB,kCAAVC,CAAD,UAAIC,CAAJ,UAC1B,GAAIF,GAAG,CAACG,cAAJ,CAAmBF,CAAnB,CAAJ,CAA2B,CACzB,KAAM,IAAIG,MAAJ,qBAA8BH,CAAE,mCAAtC,CACD,CAEDD,GAAG,CAACC,CAAD,CAAH,CAASC,CAAT,CACA,MAAOF,IAAP,CACD,CAPM,CAOJ,EAPI,CAAP,CAQD","names":["fromEntries","entries","reduce","acc","k","v","hasOwnProperty","Error"],"sources":["fromEntries.tsx"],"sourcesContent":["// Object.fromEntries is not available in older iOS versions\nexport default function fromEntries<K extends string, V>(\n  entries: (readonly [K, V])[]\n) {\n  return entries.reduce((acc, [k, v]) => {\n    if (acc.hasOwnProperty(k)) {\n      throw new Error(`A value for key '${k}' already exists in the object.`);\n    }\n\n    acc[k] = v;\n    return acc;\n  }, {} as Record<K, V>);\n}\n"]},"metadata":{},"sourceType":"module"}