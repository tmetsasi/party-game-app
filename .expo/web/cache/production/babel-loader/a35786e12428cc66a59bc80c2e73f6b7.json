{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{nanoid}from'nanoid/non-secure';import BaseRouter from\"./BaseRouter\";export var StackActions={replace:function replace(name,params){return{type:'REPLACE',payload:{name:name,params:params}};},push:function push(name,params){return{type:'PUSH',payload:{name:name,params:params}};},pop:function pop(){var count=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;return{type:'POP',payload:{count:count}};},popToTop:function popToTop(){return{type:'POP_TO_TOP'};}};export default function StackRouter(options){var router=_objectSpread(_objectSpread({},BaseRouter),{},{type:'stack',getInitialState:function getInitialState(_ref){var routeNames=_ref.routeNames,routeParamList=_ref.routeParamList;var initialRouteName=options.initialRouteName!==undefined&&routeNames.includes(options.initialRouteName)?options.initialRouteName:routeNames[0];return{stale:false,type:'stack',key:\"stack-\"+nanoid(),index:0,routeNames:routeNames,routes:[{key:initialRouteName+\"-\"+nanoid(),name:initialRouteName,params:routeParamList[initialRouteName]}]};},getRehydratedState:function getRehydratedState(partialState,_ref2){var routeNames=_ref2.routeNames,routeParamList=_ref2.routeParamList;var state=partialState;if(state.stale===false){return state;}var routes=state.routes.filter(function(route){return routeNames.includes(route.name);}).map(function(route){return _objectSpread(_objectSpread({},route),{},{key:route.key||route.name+\"-\"+nanoid(),params:routeParamList[route.name]!==undefined?_objectSpread(_objectSpread({},routeParamList[route.name]),route.params):route.params});});if(routes.length===0){var initialRouteName=options.initialRouteName!==undefined?options.initialRouteName:routeNames[0];routes.push({key:initialRouteName+\"-\"+nanoid(),name:initialRouteName,params:routeParamList[initialRouteName]});}return{stale:false,type:'stack',key:\"stack-\"+nanoid(),index:routes.length-1,routeNames:routeNames,routes:routes};},getStateForRouteNamesChange:function getStateForRouteNamesChange(state,_ref3){var routeNames=_ref3.routeNames,routeParamList=_ref3.routeParamList,routeKeyChanges=_ref3.routeKeyChanges;var routes=state.routes.filter(function(route){return routeNames.includes(route.name)&&!routeKeyChanges.includes(route.name);});if(routes.length===0){var initialRouteName=options.initialRouteName!==undefined&&routeNames.includes(options.initialRouteName)?options.initialRouteName:routeNames[0];routes.push({key:initialRouteName+\"-\"+nanoid(),name:initialRouteName,params:routeParamList[initialRouteName]});}return _objectSpread(_objectSpread({},state),{},{routeNames:routeNames,routes:routes,index:Math.min(state.index,routes.length-1)});},getStateForRouteFocus:function getStateForRouteFocus(state,key){var index=state.routes.findIndex(function(r){return r.key===key;});if(index===-1||index===state.index){return state;}return _objectSpread(_objectSpread({},state),{},{index:index,routes:state.routes.slice(0,index+1)});},getStateForAction:function getStateForAction(state,action,options){var routeParamList=options.routeParamList;switch(action.type){case'REPLACE':{var index=action.target===state.key&&action.source?state.routes.findIndex(function(r){return r.key===action.source;}):state.index;if(index===-1){return null;}var _action$payload=action.payload,name=_action$payload.name,key=_action$payload.key,params=_action$payload.params;if(!state.routeNames.includes(name)){return null;}return _objectSpread(_objectSpread({},state),{},{routes:state.routes.map(function(route,i){return i===index?{key:key!==undefined?key:name+\"-\"+nanoid(),name:name,params:routeParamList[name]!==undefined?_objectSpread(_objectSpread({},routeParamList[name]),params):params}:route;})});}case'PUSH':if(state.routeNames.includes(action.payload.name)){var getId=options.routeGetIdList[action.payload.name];var id=getId===null||getId===void 0?void 0:getId({params:action.payload.params});var route=id?state.routes.find(function(route){return route.name===action.payload.name&&id===(getId===null||getId===void 0?void 0:getId({params:route.params}));}):undefined;var routes;if(route){routes=state.routes.filter(function(r){return r.key!==route.key;});routes.push(_objectSpread(_objectSpread({},route),{},{params:routeParamList[action.payload.name]!==undefined?_objectSpread(_objectSpread({},routeParamList[action.payload.name]),action.payload.params):action.payload.params}));}else{routes=[].concat(_toConsumableArray(state.routes),[{key:action.payload.name+\"-\"+nanoid(),name:action.payload.name,params:routeParamList[action.payload.name]!==undefined?_objectSpread(_objectSpread({},routeParamList[action.payload.name]),action.payload.params):action.payload.params}]);}return _objectSpread(_objectSpread({},state),{},{index:routes.length-1,routes:routes});}return null;case'POP':{var _index=action.target===state.key&&action.source?state.routes.findIndex(function(r){return r.key===action.source;}):state.index;if(_index>0){var count=Math.max(_index-action.payload.count+1,1);var _routes=state.routes.slice(0,count).concat(state.routes.slice(_index+1));return _objectSpread(_objectSpread({},state),{},{index:_routes.length-1,routes:_routes});}return null;}case'POP_TO_TOP':return router.getStateForAction(state,{type:'POP',payload:{count:state.routes.length-1}},options);case'NAVIGATE':if(action.payload.name!==undefined&&!state.routeNames.includes(action.payload.name)){return null;}if(action.payload.key||action.payload.name){var _action$payload$path;var _index2=-1;var _getId=action.payload.key===undefined&&action.payload.name!==undefined?options.routeGetIdList[action.payload.name]:undefined;var _id=_getId===null||_getId===void 0?void 0:_getId({params:action.payload.params});if(_id){_index2=state.routes.findIndex(function(route){return route.name===action.payload.name&&_id===(_getId===null||_getId===void 0?void 0:_getId({params:route.params}));});}else if(state.routes[state.index].name===action.payload.name&&action.payload.key===undefined||state.routes[state.index].key===action.payload.key){_index2=state.index;}else{for(var i=state.routes.length-1;i>=0;i--){if(state.routes[i].name===action.payload.name&&action.payload.key===undefined||state.routes[i].key===action.payload.key){_index2=i;break;}}}if(_index2===-1&&action.payload.key&&action.payload.name===undefined){return null;}if(_index2===-1&&action.payload.name!==undefined){var _action$payload$key;var _routes2=[].concat(_toConsumableArray(state.routes),[{key:(_action$payload$key=action.payload.key)!==null&&_action$payload$key!==void 0?_action$payload$key:action.payload.name+\"-\"+nanoid(),name:action.payload.name,path:action.payload.path,params:routeParamList[action.payload.name]!==undefined?_objectSpread(_objectSpread({},routeParamList[action.payload.name]),action.payload.params):action.payload.params}]);return _objectSpread(_objectSpread({},state),{},{routes:_routes2,index:_routes2.length-1});}var _route=state.routes[_index2];var _params;if(action.payload.merge){_params=action.payload.params!==undefined||routeParamList[_route.name]!==undefined?_objectSpread(_objectSpread(_objectSpread({},routeParamList[_route.name]),_route.params),action.payload.params):_route.params;}else{_params=routeParamList[_route.name]!==undefined?_objectSpread(_objectSpread({},routeParamList[_route.name]),action.payload.params):action.payload.params;}return _objectSpread(_objectSpread({},state),{},{index:_index2,routes:[].concat(_toConsumableArray(state.routes.slice(0,_index2)),[_params!==_route.params||action.payload.path&&action.payload.path!==_route.path?_objectSpread(_objectSpread({},_route),{},{path:(_action$payload$path=action.payload.path)!==null&&_action$payload$path!==void 0?_action$payload$path:_route.path,params:_params}):state.routes[_index2]])});}return null;case'GO_BACK':if(state.index>0){return router.getStateForAction(state,{type:'POP',payload:{count:1},target:action.target,source:action.source},options);}return null;default:return BaseRouter.getStateForAction(state,action);}},actionCreators:StackActions});return router;}","map":{"version":3,"mappings":"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","names":["nanoid","BaseRouter","StackActions","replace","name","params","type","payload","push","pop","count","popToTop","StackRouter","options","router","getInitialState","routeNames","routeParamList","initialRouteName","undefined","includes","stale","key","index","routes","getRehydratedState","partialState","state","filter","route","map","length","getStateForRouteNamesChange","routeKeyChanges","Math","min","getStateForRouteFocus","findIndex","r","slice","getStateForAction","action","target","source","i","getId","routeGetIdList","id","find","max","concat","path","merge","actionCreators"],"sources":["StackRouter.tsx"],"sourcesContent":["import { nanoid } from 'nanoid/non-secure';\n\nimport BaseRouter from './BaseRouter';\nimport type {\n  CommonNavigationAction,\n  DefaultRouterOptions,\n  NavigationState,\n  ParamListBase,\n  Route,\n  Router,\n} from './types';\n\nexport type StackActionType =\n  | {\n      type: 'REPLACE';\n      payload: { name: string; key?: string | undefined; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'PUSH';\n      payload: { name: string; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'POP';\n      payload: { count: number };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'POP_TO_TOP';\n      source?: string;\n      target?: string;\n    };\n\nexport type StackRouterOptions = DefaultRouterOptions;\n\nexport type StackNavigationState<ParamList extends ParamListBase> =\n  NavigationState<ParamList> & {\n    /**\n     * Type of the router, in this case, it's stack.\n     */\n    type: 'stack';\n  };\n\nexport type StackActionHelpers<ParamList extends ParamListBase> = {\n  /**\n   * Replace the current route with a new one.\n   *\n   * @param name Route name of the new route.\n   * @param [params] Params object for the new route.\n   */\n  replace<RouteName extends keyof ParamList>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [screen: RouteName] | [screen: RouteName, params: ParamList[RouteName]]\n      : [screen: RouteName, params: ParamList[RouteName]]\n  ): void;\n\n  /**\n   * Push a new screen onto the stack.\n   *\n   * @param name Name of the route for the tab.\n   * @param [params] Params object for the route.\n   */\n  push<RouteName extends keyof ParamList>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [screen: RouteName] | [screen: RouteName, params: ParamList[RouteName]]\n      : [screen: RouteName, params: ParamList[RouteName]]\n  ): void;\n\n  /**\n   * Pop a screen from the stack.\n   */\n  pop(count?: number): void;\n\n  /**\n   * Pop to the first route in the stack, dismissing all other screens.\n   */\n  popToTop(): void;\n};\n\nexport const StackActions = {\n  replace(name: string, params?: object): StackActionType {\n    return { type: 'REPLACE', payload: { name, params } };\n  },\n  push(name: string, params?: object): StackActionType {\n    return { type: 'PUSH', payload: { name, params } };\n  },\n  pop(count: number = 1): StackActionType {\n    return { type: 'POP', payload: { count } };\n  },\n  popToTop(): StackActionType {\n    return { type: 'POP_TO_TOP' };\n  },\n};\n\nexport default function StackRouter(options: StackRouterOptions) {\n  const router: Router<\n    StackNavigationState<ParamListBase>,\n    CommonNavigationAction | StackActionType\n  > = {\n    ...BaseRouter,\n\n    type: 'stack',\n\n    getInitialState({ routeNames, routeParamList }) {\n      const initialRouteName =\n        options.initialRouteName !== undefined &&\n        routeNames.includes(options.initialRouteName)\n          ? options.initialRouteName\n          : routeNames[0];\n\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: 0,\n        routeNames,\n        routes: [\n          {\n            key: `${initialRouteName}-${nanoid()}`,\n            name: initialRouteName,\n            params: routeParamList[initialRouteName],\n          },\n        ],\n      };\n    },\n\n    getRehydratedState(partialState, { routeNames, routeParamList }) {\n      let state = partialState;\n\n      if (state.stale === false) {\n        return state;\n      }\n\n      const routes = state.routes\n        .filter((route) => routeNames.includes(route.name))\n        .map(\n          (route) =>\n            ({\n              ...route,\n              key: route.key || `${route.name}-${nanoid()}`,\n              params:\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...route.params,\n                    }\n                  : route.params,\n            } as Route<string>)\n        );\n\n      if (routes.length === 0) {\n        const initialRouteName =\n          options.initialRouteName !== undefined\n            ? options.initialRouteName\n            : routeNames[0];\n\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName],\n        });\n      }\n\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: routes.length - 1,\n        routeNames,\n        routes,\n      };\n    },\n\n    getStateForRouteNamesChange(\n      state,\n      { routeNames, routeParamList, routeKeyChanges }\n    ) {\n      const routes = state.routes.filter(\n        (route) =>\n          routeNames.includes(route.name) &&\n          !routeKeyChanges.includes(route.name)\n      );\n\n      if (routes.length === 0) {\n        const initialRouteName =\n          options.initialRouteName !== undefined &&\n          routeNames.includes(options.initialRouteName)\n            ? options.initialRouteName\n            : routeNames[0];\n\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName],\n        });\n      }\n\n      return {\n        ...state,\n        routeNames,\n        routes,\n        index: Math.min(state.index, routes.length - 1),\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const index = state.routes.findIndex((r) => r.key === key);\n\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n\n      return {\n        ...state,\n        index,\n        routes: state.routes.slice(0, index + 1),\n      };\n    },\n\n    getStateForAction(state, action, options) {\n      const { routeParamList } = options;\n\n      switch (action.type) {\n        case 'REPLACE': {\n          const index =\n            action.target === state.key && action.source\n              ? state.routes.findIndex((r) => r.key === action.source)\n              : state.index;\n\n          if (index === -1) {\n            return null;\n          }\n\n          const { name, key, params } = action.payload;\n\n          if (!state.routeNames.includes(name)) {\n            return null;\n          }\n\n          return {\n            ...state,\n            routes: state.routes.map((route, i) =>\n              i === index\n                ? {\n                    key: key !== undefined ? key : `${name}-${nanoid()}`,\n                    name,\n                    params:\n                      routeParamList[name] !== undefined\n                        ? {\n                            ...routeParamList[name],\n                            ...params,\n                          }\n                        : params,\n                  }\n                : route\n            ),\n          };\n        }\n\n        case 'PUSH':\n          if (state.routeNames.includes(action.payload.name)) {\n            const getId = options.routeGetIdList[action.payload.name];\n            const id = getId?.({ params: action.payload.params });\n\n            const route = id\n              ? state.routes.find(\n                  (route) =>\n                    route.name === action.payload.name &&\n                    id === getId?.({ params: route.params })\n                )\n              : undefined;\n\n            let routes: Route<string>[];\n\n            if (route) {\n              routes = state.routes.filter((r) => r.key !== route.key);\n              routes.push({\n                ...route,\n                params:\n                  routeParamList[action.payload.name] !== undefined\n                    ? {\n                        ...routeParamList[action.payload.name],\n                        ...action.payload.params,\n                      }\n                    : action.payload.params,\n              });\n            } else {\n              routes = [\n                ...state.routes,\n                {\n                  key: `${action.payload.name}-${nanoid()}`,\n                  name: action.payload.name,\n                  params:\n                    routeParamList[action.payload.name] !== undefined\n                      ? {\n                          ...routeParamList[action.payload.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params,\n                },\n              ];\n            }\n\n            return {\n              ...state,\n              index: routes.length - 1,\n              routes,\n            };\n          }\n\n          return null;\n\n        case 'POP': {\n          const index =\n            action.target === state.key && action.source\n              ? state.routes.findIndex((r) => r.key === action.source)\n              : state.index;\n\n          if (index > 0) {\n            const count = Math.max(index - action.payload.count + 1, 1);\n            const routes = state.routes\n              .slice(0, count)\n              .concat(state.routes.slice(index + 1));\n\n            return {\n              ...state,\n              index: routes.length - 1,\n              routes,\n            };\n          }\n\n          return null;\n        }\n\n        case 'POP_TO_TOP':\n          return router.getStateForAction(\n            state,\n            {\n              type: 'POP',\n              payload: { count: state.routes.length - 1 },\n            },\n            options\n          );\n\n        case 'NAVIGATE':\n          if (\n            action.payload.name !== undefined &&\n            !state.routeNames.includes(action.payload.name)\n          ) {\n            return null;\n          }\n\n          if (action.payload.key || action.payload.name) {\n            // If the route already exists, navigate to that\n            let index = -1;\n\n            const getId =\n              // `getId` and `key` can't be used together\n              action.payload.key === undefined &&\n              action.payload.name !== undefined\n                ? options.routeGetIdList[action.payload.name]\n                : undefined;\n            const id = getId?.({ params: action.payload.params });\n\n            if (id) {\n              index = state.routes.findIndex(\n                (route) =>\n                  route.name === action.payload.name &&\n                  id === getId?.({ params: route.params })\n              );\n            } else if (\n              (state.routes[state.index].name === action.payload.name &&\n                action.payload.key === undefined) ||\n              state.routes[state.index].key === action.payload.key\n            ) {\n              index = state.index;\n            } else {\n              for (let i = state.routes.length - 1; i >= 0; i--) {\n                if (\n                  (state.routes[i].name === action.payload.name &&\n                    action.payload.key === undefined) ||\n                  state.routes[i].key === action.payload.key\n                ) {\n                  index = i;\n                  break;\n                }\n              }\n            }\n\n            if (\n              index === -1 &&\n              action.payload.key &&\n              action.payload.name === undefined\n            ) {\n              return null;\n            }\n\n            if (index === -1 && action.payload.name !== undefined) {\n              const routes = [\n                ...state.routes,\n                {\n                  key:\n                    action.payload.key ?? `${action.payload.name}-${nanoid()}`,\n                  name: action.payload.name,\n                  path: action.payload.path,\n                  params:\n                    routeParamList[action.payload.name] !== undefined\n                      ? {\n                          ...routeParamList[action.payload.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params,\n                },\n              ];\n\n              return {\n                ...state,\n                routes,\n                index: routes.length - 1,\n              };\n            }\n\n            const route = state.routes[index];\n\n            let params;\n\n            if (action.payload.merge) {\n              params =\n                action.payload.params !== undefined ||\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...route.params,\n                      ...action.payload.params,\n                    }\n                  : route.params;\n            } else {\n              params =\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...action.payload.params,\n                    }\n                  : action.payload.params;\n            }\n\n            return {\n              ...state,\n              index,\n              routes: [\n                ...state.routes.slice(0, index),\n                params !== route.params ||\n                (action.payload.path && action.payload.path !== route.path)\n                  ? {\n                      ...route,\n                      path: action.payload.path ?? route.path,\n                      params,\n                    }\n                  : state.routes[index],\n              ],\n            };\n          }\n\n          return null;\n\n        case 'GO_BACK':\n          if (state.index > 0) {\n            return router.getStateForAction(\n              state,\n              {\n                type: 'POP',\n                payload: { count: 1 },\n                target: action.target,\n                source: action.source,\n              },\n              options\n            );\n          }\n\n          return null;\n\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n\n    actionCreators: StackActions,\n  };\n\n  return router;\n}\n"]},"metadata":{},"sourceType":"module"}