{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import TextInput from\"react-native-web/dist/exports/TextInput\";import ImageBackground from\"react-native-web/dist/exports/ImageBackground\";import Button from\"react-native-web/dist/exports/Button\";import KeyboardAvoidingView from\"react-native-web/dist/exports/KeyboardAvoidingView\";import Platform from\"react-native-web/dist/exports/Platform\";import AppStyles from\"../styles/AppStyles\";import InlineTextButton from\"../components/InlineTextButton\";import React from'react';import{auth}from\"../firebase\";import{createUserWithEmailAndPassword,sendEmailVerification}from\"firebase/auth\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function SignUp(_ref){var navigation=_ref.navigation;var background=require(\"../assets/background.jpg\");var _React$useState=React.useState(\"\"),_React$useState2=_slicedToArray(_React$useState,2),email=_React$useState2[0],setEmail=_React$useState2[1];var _React$useState3=React.useState(\"\"),_React$useState4=_slicedToArray(_React$useState3,2),password=_React$useState4[0],setPassword=_React$useState4[1];var _React$useState5=React.useState(\"\"),_React$useState6=_slicedToArray(_React$useState5,2),confirmPassword=_React$useState6[0],setConfirmPassword=_React$useState6[1];var _React$useState7=React.useState(\"\"),_React$useState8=_slicedToArray(_React$useState7,2),validationMessage=_React$useState8[0],setValidationMessage=_React$useState8[1];var validateAndSet=function validateAndSet(value,valueToCompare,setValue){if(value!==valueToCompare){setValidationMessage(\"Passwords do not match.\");}else{setValidationMessage(\"\");}setValue(value);};var signUp=function signUp(){if(password===confirmPassword){createUserWithEmailAndPassword(auth,email,password).then(function(userCredential){sendEmailVerification(auth.currentUser);navigation.navigate(\"ToDo\",{user:userCredential.user});}).catch(function(error){setValidationMessage(error.message);});}};return _jsx(ImageBackground,{style:AppStyles.imageContainer,source:background,children:_jsxs(KeyboardAvoidingView,{style:AppStyles.backgroundCover,behavior:Platform.OS===\"ios\"?\"padding\":null,keyboardVerticalOffset:60,children:[_jsx(Text,{style:[AppStyles.lightText,AppStyles.header],children:\"Sign Up\"}),_jsx(Text,{style:[AppStyles.errorText],children:validationMessage}),_jsx(TextInput,{style:[AppStyles.textInput,AppStyles.lightTextInput,AppStyles.lightText],placeholder:\"Email\",placeholderTextColor:\"#BEBEBE\",value:email,onChangeText:setEmail}),_jsx(TextInput,{style:[AppStyles.textInput,AppStyles.lightTextInput,AppStyles.lightText],placeholder:\"Password\",placeholderTextColor:\"#BEBEBE\",secureTextEntry:true,value:password,onChangeText:function onChangeText(value){return validateAndSet(value,confirmPassword,setPassword);}}),_jsx(TextInput,{style:[AppStyles.textInput,AppStyles.lightTextInput,AppStyles.lightText],placeholder:\"Confirm Password\",placeholderTextColor:\"#BEBEBE\",secureTextEntry:true,value:confirmPassword,onChangeText:function onChangeText(value){return validateAndSet(value,password,setConfirmPassword);}}),_jsxs(View,{style:[AppStyles.rowContainer,AppStyles.topMargin],children:[_jsx(Text,{style:AppStyles.lightText,children:\"Already have an account? \"}),_jsx(InlineTextButton,{text:\"Login\",onPress:function onPress(){return navigation.popToTop();}})]}),_jsx(Button,{title:\"Sign Up\",onPress:signUp,color:\"#f7b267\"})]})});}","map":{"version":3,"names":["AppStyles","InlineTextButton","React","auth","createUserWithEmailAndPassword","sendEmailVerification","SignUp","navigation","background","require","useState","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","validationMessage","setValidationMessage","validateAndSet","value","valueToCompare","setValue","signUp","then","userCredential","currentUser","navigate","user","catch","error","message","imageContainer","backgroundCover","Platform","OS","lightText","header","errorText","textInput","lightTextInput","rowContainer","topMargin","popToTop"],"sources":["/Users/tmetsasi/Desktop/Projects/PartyGame/party-game-app/screens/SignUp.js"],"sourcesContent":["import { Text, View, TextInput, ImageBackground, Button, KeyboardAvoidingView, Platform } from 'react-native';\nimport AppStyles from '../styles/AppStyles';\nimport InlineTextButton from '../components/InlineTextButton';\nimport React from 'react';\nimport { auth } from \"../firebase\";\nimport { createUserWithEmailAndPassword, sendEmailVerification } from \"firebase/auth\";\n\nexport default function SignUp({ navigation }) {\n  const background = require(\"../assets/background.jpg\");\n\n  let [email, setEmail] = React.useState(\"\");\n  let [password, setPassword] = React.useState(\"\");\n  let [confirmPassword, setConfirmPassword] = React.useState(\"\");\n  let [validationMessage, setValidationMessage] = React.useState(\"\");\n\n  let validateAndSet = (value, valueToCompare, setValue) => {\n    if (value !== valueToCompare) {\n      setValidationMessage(\"Passwords do not match.\");\n    } else {\n      setValidationMessage(\"\");\n    }\n\n    setValue(value);\n  };\n\n  let signUp = () => {\n    if (password === confirmPassword) {\n      createUserWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        sendEmailVerification(auth.currentUser);\n        navigation.navigate(\"ToDo\", { user: userCredential.user });\n      })\n      .catch((error) => {\n        setValidationMessage(error.message);\n      });\n    }\n  }\n\n  return (\n    <ImageBackground style={AppStyles.imageContainer} source={background}>\n      <KeyboardAvoidingView \n        style={AppStyles.backgroundCover} \n        behavior={Platform.OS === \"ios\" ? \"padding\" : null}\n        keyboardVerticalOffset={60}>\n        <Text style={[AppStyles.lightText, AppStyles.header]}>Sign Up</Text>\n        <Text style={[AppStyles.errorText]}>{validationMessage}</Text>\n        <TextInput \n          style={[AppStyles.textInput, AppStyles.lightTextInput, AppStyles.lightText]} \n          placeholder='Email' \n          placeholderTextColor=\"#BEBEBE\"\n          value={email}\n          onChangeText={setEmail} />\n        <TextInput \n          style={[AppStyles.textInput, AppStyles.lightTextInput, AppStyles.lightText]} \n          placeholder='Password' \n          placeholderTextColor=\"#BEBEBE\" \n          secureTextEntry={true} \n          value={password} \n          onChangeText={(value) => validateAndSet(value, confirmPassword, setPassword)} />\n        <TextInput \n          style={[AppStyles.textInput, AppStyles.lightTextInput, AppStyles.lightText]} \n          placeholder='Confirm Password' \n          placeholderTextColor=\"#BEBEBE\" \n          secureTextEntry={true} \n          value={confirmPassword} \n          onChangeText={(value) => validateAndSet(value, password, setConfirmPassword)} />\n        <View style={[AppStyles.rowContainer, AppStyles.topMargin]}>\n          <Text style={AppStyles.lightText}>Already have an account? </Text>\n          <InlineTextButton text=\"Login\" onPress={() => navigation.popToTop()} />\n        </View>\n        <Button title=\"Sign Up\" onPress={signUp} color=\"#f7b267\" />\n      </KeyboardAvoidingView>\n    </ImageBackground>\n  );\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}