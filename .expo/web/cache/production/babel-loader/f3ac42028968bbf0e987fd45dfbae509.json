{"ast":null,"code":"import*as React from'react';import Dimensions from\"react-native-web/dist/exports/Dimensions\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{initialWindowMetrics,SafeAreaInsetsContext,SafeAreaProvider}from'react-native-safe-area-context';var _Dimensions$get=Dimensions.get('window'),_Dimensions$get$width=_Dimensions$get.width,width=_Dimensions$get$width===void 0?0:_Dimensions$get$width,_Dimensions$get$heigh=_Dimensions$get.height,height=_Dimensions$get$heigh===void 0?0:_Dimensions$get$heigh;var initialMetrics=Platform.OS==='web'||initialWindowMetrics==null?{frame:{x:0,y:0,width:width,height:height},insets:{top:0,left:0,right:0,bottom:0}}:initialWindowMetrics;export default function SafeAreaProviderCompat(_ref){var children=_ref.children,style=_ref.style;return React.createElement(SafeAreaInsetsContext.Consumer,null,function(insets){if(insets){return React.createElement(View,{style:[styles.container,style]},children);}return React.createElement(SafeAreaProvider,{initialMetrics:initialMetrics,style:style},children);});}SafeAreaProviderCompat.initialMetrics=initialMetrics;var styles=StyleSheet.create({container:{flex:1}});","map":{"version":3,"sources":["SafeAreaProviderCompat.tsx"],"names":["React","initialWindowMetrics","SafeAreaInsetsContext","SafeAreaProvider","width","height","Dimensions","get","initialMetrics","OS","frame","x","y","insets","top","left","right","bottom","SafeAreaProviderCompat","children","style","styles","container","create","flex"],"mappings":"AAAA,MAAO,GAAKA,MAAZ,KAAuB,OAAvB,CAAA,oPASA,OACEC,oBADF,CAEEC,qBAFF,CAGEC,gBAHF,KAIO,gCAJP,CAWA,oBAAkCG,UAAU,CAACC,GAAXD,CAAe,QAAfA,CAAlC,uCAAQF,KAAK,CAALA,KAAK,gCAAG,CAAV,6DAAaC,MAAM,CAANA,MAAM,gCAAG,CAAA,uBAK5B,GAAMG,eAAc,CAClB,QAAQ,CAACC,EAAT,GAAgB,KAAhB,EAAyBR,oBAAoB,EAAI,IAAjD,CACI,CACES,KAAK,CAAE,CAAEC,CAAC,CAAE,CAAL,CAAQC,CAAC,CAAE,CAAX,CAAcR,KAAd,CAAcA,KAAd,CAAqBC,MAAAA,CAAAA,MAArB,CADT,CAEEQ,MAAM,CAAE,CAAEC,GAAG,CAAE,CAAP,CAAUC,IAAI,CAAE,CAAhB,CAAmBC,KAAK,CAAE,CAA1B,CAA6BC,MAAM,CAAE,CAArC,CAFV,CADJ,CAKIhB,oBANN,CAQA,cAAe,SAASiB,uBAAT,CAAA,IAAA,CAA4D,CAA5B,GAAEC,SAAF,CAA4B,IAAA,CAA1BA,QAAF,CAAYC,KAAAA,CAAgB,IAAA,CAAhBA,KAAAA,CACzD,MACE,MAAA,CAAA,aAAA,CAAC,qBAAD,CAAuB,QAAvB,CAAA,IAAA,CACIP,SAAAA,MAAD,CAAY,CACX,GAAIA,MAAJ,CAAY,CAIV,MAAO,MAAA,CAAA,aAAA,CAAC,IAAD,CAAA,CAAM,KAAK,CAAE,CAACQ,MAAM,CAACC,SAAR,CAAmBF,KAAnB,CAAb,CAAA,CAAyCD,QAAzC,CAAP,CACD,CAED,MACE,MAAA,CAAA,aAAA,CAAC,gBAAD,CAAA,CAAkB,cAAc,CAAEX,cAAlC,CAAkD,KAAK,CAAEY,KAAzD,CAAA,CACGD,QADH,CADF,CAKD,CAdH,CADF,CAkBD,CAEDD,sBAAsB,CAACV,cAAvBU,CAAwCV,cAAxCU,CAEA,GAAMG,OAAM,CAAG,UAAU,CAACE,MAAX,CAAkB,CAC/BD,SAAS,CAAE,CACTE,IAAI,CAAE,CADG,CADoB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport {\n  Dimensions,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport {\n  initialWindowMetrics,\n  SafeAreaInsetsContext,\n  SafeAreaProvider,\n} from 'react-native-safe-area-context';\n\ntype Props = {\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\nconst { width = 0, height = 0 } = Dimensions.get('window');\n\n// To support SSR on web, we need to have empty insets for initial values\n// Otherwise there can be mismatch between SSR and client output\n// We also need to specify empty values to support tests environments\nconst initialMetrics =\n  Platform.OS === 'web' || initialWindowMetrics == null\n    ? {\n        frame: { x: 0, y: 0, width, height },\n        insets: { top: 0, left: 0, right: 0, bottom: 0 },\n      }\n    : initialWindowMetrics;\n\nexport default function SafeAreaProviderCompat({ children, style }: Props) {\n  return (\n    <SafeAreaInsetsContext.Consumer>\n      {(insets) => {\n        if (insets) {\n          // If we already have insets, don't wrap the stack in another safe area provider\n          // This avoids an issue with updates at the cost of potentially incorrect values\n          // https://github.com/react-navigation/react-navigation/issues/174\n          return <View style={[styles.container, style]}>{children}</View>;\n        }\n\n        return (\n          <SafeAreaProvider initialMetrics={initialMetrics} style={style}>\n            {children}\n          </SafeAreaProvider>\n        );\n      }}\n    </SafeAreaInsetsContext.Consumer>\n  );\n}\n\nSafeAreaProviderCompat.initialMetrics = initialMetrics;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}