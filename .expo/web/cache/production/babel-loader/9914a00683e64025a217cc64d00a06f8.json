{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import{findFocusedRoute,getActionFromState as getActionFromStateDefault,getPathFromState as getPathFromStateDefault,getStateFromPath as getStateFromPathDefault}from'@react-navigation/core';import isEqual from'fast-deep-equal';import{nanoid}from'nanoid/non-secure';import*as React from'react';import ServerContext from\"./ServerContext\";var createMemoryHistory=function createMemoryHistory(){var index=0;var items=[];var pending=[];var interrupt=function interrupt(){pending.forEach(function(it){var cb=it.cb;it.cb=function(){return cb(true);};});};var history={get index(){var _window$history$state;var id=(_window$history$state=window.history.state)===null||_window$history$state===void 0?void 0:_window$history$state.id;if(id){var _index=items.findIndex(function(item){return item.id===id;});return _index>-1?_index:0;}return 0;},get:function get(index){return items[index];},backIndex:function backIndex(_ref){var path=_ref.path;for(var i=index-1;i>=0;i--){var item=items[i];if(item.path===path){return i;}}return-1;},push:function push(_ref2){var path=_ref2.path,state=_ref2.state;interrupt();var id=nanoid();items=items.slice(0,index+1);items.push({path:path,state:state,id:id});index=items.length-1;window.history.pushState({id:id},'',path);},replace:function replace(_ref3){var _window$history$state2,_window$history$state3;var path=_ref3.path,state=_ref3.state;interrupt();var id=(_window$history$state2=(_window$history$state3=window.history.state)===null||_window$history$state3===void 0?void 0:_window$history$state3.id)!==null&&_window$history$state2!==void 0?_window$history$state2:nanoid();if(!items.length||items.findIndex(function(item){return item.id===id;})<0){items=[{path:path,state:state,id:id}];index=0;}else{items[index]={path:path,state:state,id:id};}window.history.replaceState({id:id},'',path);},go:function go(n){interrupt();if(n===0){return;}index=n<0?Math.max(index-n,0):Math.min(index+n,items.length-1);return new Promise(function(resolve,reject){var done=function done(interrupted){clearTimeout(timer);if(interrupted){reject(new Error('History was changed during navigation.'));return;}var title=window.document.title;window.document.title='';window.document.title=title;resolve();};pending.push({ref:done,cb:done});var timer=setTimeout(function(){var index=pending.findIndex(function(it){return it.ref===done;});if(index>-1){pending[index].cb();pending.splice(index,1);}},100);var onPopState=function onPopState(){var _window$history$state4;var id=(_window$history$state4=window.history.state)===null||_window$history$state4===void 0?void 0:_window$history$state4.id;var currentIndex=items.findIndex(function(item){return item.id===id;});index=Math.max(currentIndex,0);var last=pending.pop();window.removeEventListener('popstate',onPopState);last===null||last===void 0?void 0:last.cb();};window.addEventListener('popstate',onPopState);window.history.go(n);});},listen:function listen(listener){var onPopState=function onPopState(){if(pending.length){return;}listener();};window.addEventListener('popstate',onPopState);return function(){return window.removeEventListener('popstate',onPopState);};}};return history;};var findMatchingState=function findMatchingState(a,b){if(a===undefined||b===undefined||a.key!==b.key){return[undefined,undefined];}var aHistoryLength=a.history?a.history.length:a.routes.length;var bHistoryLength=b.history?b.history.length:b.routes.length;var aRoute=a.routes[a.index];var bRoute=b.routes[b.index];var aChildState=aRoute.state;var bChildState=bRoute.state;if(aHistoryLength!==bHistoryLength||aRoute.key!==bRoute.key||aChildState===undefined||bChildState===undefined||aChildState.key!==bChildState.key){return[a,b];}return findMatchingState(aChildState,bChildState);};var series=function series(cb){var handling=false;var queue=[];var callback=function(){var _ref5=_asyncToGenerator(function*(){try{if(handling){queue.unshift(callback);return;}handling=true;yield cb();}finally{handling=false;if(queue.length){var last=queue.pop();last===null||last===void 0?void 0:last();}}});return function callback(){return _ref5.apply(this,arguments);};}();return callback;};var linkingHandlers=[];export default function useLinking(ref,_ref4){var independent=_ref4.independent,_ref4$enabled=_ref4.enabled,enabled=_ref4$enabled===void 0?true:_ref4$enabled,config=_ref4.config,_ref4$getStateFromPat=_ref4.getStateFromPath,getStateFromPath=_ref4$getStateFromPat===void 0?getStateFromPathDefault:_ref4$getStateFromPat,_ref4$getPathFromStat=_ref4.getPathFromState,getPathFromState=_ref4$getPathFromStat===void 0?getPathFromStateDefault:_ref4$getPathFromStat,_ref4$getActionFromSt=_ref4.getActionFromState,getActionFromState=_ref4$getActionFromSt===void 0?getActionFromStateDefault:_ref4$getActionFromSt;React.useEffect(function(){if(process.env.NODE_ENV==='production'){return undefined;}if(independent){return undefined;}if(enabled!==false&&linkingHandlers.length){console.error(['Looks like you have configured linking in multiple places. This is likely an error since deep links should only be handled in one place to avoid conflicts. Make sure that:',\"- You don't have multiple NavigationContainers in the app each with 'linking' enabled\",'- Only a single instance of the root component is rendered'].join('\\n').trim());}var handler=Symbol();if(enabled!==false){linkingHandlers.push(handler);}return function(){var index=linkingHandlers.indexOf(handler);if(index>-1){linkingHandlers.splice(index,1);}};},[enabled,independent]);var _React$useState=React.useState(createMemoryHistory),_React$useState2=_slicedToArray(_React$useState,1),history=_React$useState2[0];var enabledRef=React.useRef(enabled);var configRef=React.useRef(config);var getStateFromPathRef=React.useRef(getStateFromPath);var getPathFromStateRef=React.useRef(getPathFromState);var getActionFromStateRef=React.useRef(getActionFromState);React.useEffect(function(){enabledRef.current=enabled;configRef.current=config;getStateFromPathRef.current=getStateFromPath;getPathFromStateRef.current=getPathFromState;getActionFromStateRef.current=getActionFromState;});var server=React.useContext(ServerContext);var getInitialState=React.useCallback(function(){var value;if(enabledRef.current){var _server$location;var _location=(_server$location=server===null||server===void 0?void 0:server.location)!==null&&_server$location!==void 0?_server$location:typeof window!=='undefined'?window.location:undefined;var path=_location?_location.pathname+_location.search:undefined;if(path){value=getStateFromPathRef.current(path,configRef.current);}}var thenable={then:function then(onfulfilled){return Promise.resolve(onfulfilled?onfulfilled(value):value);},catch:function _catch(){return thenable;}};return thenable;},[]);var previousIndexRef=React.useRef(undefined);var previousStateRef=React.useRef(undefined);var pendingPopStatePathRef=React.useRef(undefined);React.useEffect(function(){previousIndexRef.current=history.index;return history.listen(function(){var _previousIndexRef$cur;var navigation=ref.current;if(!navigation||!enabled){return;}var path=location.pathname+location.search;var index=history.index;var previousIndex=(_previousIndexRef$cur=previousIndexRef.current)!==null&&_previousIndexRef$cur!==void 0?_previousIndexRef$cur:0;previousIndexRef.current=index;pendingPopStatePathRef.current=path;var record=history.get(index);if((record===null||record===void 0?void 0:record.path)===path&&record!==null&&record!==void 0&&record.state){navigation.resetRoot(record.state);return;}var state=getStateFromPathRef.current(path,configRef.current);if(state){var rootState=navigation.getRootState();if(state.routes.some(function(r){return!(rootState!==null&&rootState!==void 0&&rootState.routeNames.includes(r.name));})){console.warn(\"The navigation state parsed from the URL contains routes not present in the root navigator. This usually means that the linking configuration doesn't match the navigation structure. See https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.\");return;}if(index>previousIndex){var action=getActionFromStateRef.current(state,configRef.current);if(action!==undefined){try{navigation.dispatch(action);}catch(e){console.warn(\"An error occurred when trying to handle the link '\"+path+\"': \"+(typeof e==='object'&&e!=null&&'message'in e?e.message:e));}}else{navigation.resetRoot(state);}}else{navigation.resetRoot(state);}}else{navigation.resetRoot(state);}});},[enabled,history,ref]);React.useEffect(function(){var _ref$current;if(!enabled){return;}var getPathForRoute=function getPathForRoute(route,state){if(route!==null&&route!==void 0&&route.path){var stateForPath=getStateFromPathRef.current(route.path,configRef.current);if(stateForPath){var focusedRoute=findFocusedRoute(stateForPath);if(focusedRoute&&focusedRoute.name===route.name&&isEqual(focusedRoute.params,route.params)){return route.path;}}}return getPathFromStateRef.current(state,configRef.current);};if(ref.current){var state=ref.current.getRootState();if(state){var route=findFocusedRoute(state);var path=getPathForRoute(route,state);if(previousStateRef.current===undefined){previousStateRef.current=state;}history.replace({path:path,state:state});}}var onStateChange=function(){var _ref6=_asyncToGenerator(function*(){var navigation=ref.current;if(!navigation||!enabled){return;}var previousState=previousStateRef.current;var state=navigation.getRootState();if(!state){return;}var pendingPath=pendingPopStatePathRef.current;var route=findFocusedRoute(state);var path=getPathForRoute(route,state);previousStateRef.current=state;pendingPopStatePathRef.current=undefined;var _findMatchingState=findMatchingState(previousState,state),_findMatchingState2=_slicedToArray(_findMatchingState,2),previousFocusedState=_findMatchingState2[0],focusedState=_findMatchingState2[1];if(previousFocusedState&&focusedState&&path!==pendingPath){var historyDelta=(focusedState.history?focusedState.history.length:focusedState.routes.length)-(previousFocusedState.history?previousFocusedState.history.length:previousFocusedState.routes.length);if(historyDelta>0){history.push({path:path,state:state});}else if(historyDelta<0){var nextIndex=history.backIndex({path:path});var currentIndex=history.index;try{if(nextIndex!==-1&&nextIndex<currentIndex){yield history.go(nextIndex-currentIndex);}else{yield history.go(historyDelta);}history.replace({path:path,state:state});}catch(e){}}else{history.replace({path:path,state:state});}}else{history.replace({path:path,state:state});}});return function onStateChange(){return _ref6.apply(this,arguments);};}();return(_ref$current=ref.current)===null||_ref$current===void 0?void 0:_ref$current.addListener('state',series(onStateChange));});return{getInitialState:getInitialState};}","map":{"version":3,"sources":["useLinking.tsx"],"names":["findFocusedRoute","getActionFromState","getActionFromStateDefault","getPathFromState","getPathFromStateDefault","getStateFromPath","getStateFromPathDefault","isEqual","nanoid","React","ServerContext","createMemoryHistory","index","items","pending","interrupt","forEach","it","cb","history","id","window","state","findIndex","item","get","backIndex","path","i","push","slice","length","pushState","replace","replaceState","go","n","Math","max","min","Promise","resolve","reject","done","interrupted","clearTimeout","timer","Error","title","document","ref","setTimeout","splice","onPopState","currentIndex","last","pop","removeEventListener","addEventListener","listen","listener","findMatchingState","a","b","undefined","key","aHistoryLength","routes","bHistoryLength","aRoute","bRoute","aChildState","bChildState","series","handling","queue","callback","unshift","linkingHandlers","useLinking","independent","enabled","config","useEffect","process","env","NODE_ENV","console","error","join","trim","handler","Symbol","indexOf","useState","enabledRef","useRef","configRef","getStateFromPathRef","getPathFromStateRef","getActionFromStateRef","current","server","useContext","getInitialState","useCallback","value","location","pathname","search","thenable","then","onfulfilled","catch","previousIndexRef","previousStateRef","pendingPopStatePathRef","navigation","previousIndex","record","resetRoot","rootState","getRootState","some","r","routeNames","includes","name","warn","action","dispatch","e","message","getPathForRoute","route","stateForPath","focusedRoute","params","onStateChange","previousState","pendingPath","previousFocusedState","focusedState","historyDelta","nextIndex","addListener"],"mappings":"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","sourcesContent":["import {\n  findFocusedRoute,\n  getActionFromState as getActionFromStateDefault,\n  getPathFromState as getPathFromStateDefault,\n  getStateFromPath as getStateFromPathDefault,\n  NavigationContainerRef,\n  NavigationState,\n  ParamListBase,\n} from '@react-navigation/core';\nimport isEqual from 'fast-deep-equal';\nimport { nanoid } from 'nanoid/non-secure';\nimport * as React from 'react';\n\nimport ServerContext from './ServerContext';\nimport type { LinkingOptions } from './types';\n\ntype ResultState = ReturnType<typeof getStateFromPathDefault>;\n\ntype HistoryRecord = {\n  // Unique identifier for this record to match it with window.history.state\n  id: string;\n  // Navigation state object for the history entry\n  state: NavigationState;\n  // Path of the history entry\n  path: string;\n};\n\nconst createMemoryHistory = () => {\n  let index = 0;\n  let items: HistoryRecord[] = [];\n\n  // Pending callbacks for `history.go(n)`\n  // We might modify the callback stored if it was interrupted, so we have a ref to identify it\n  const pending: { ref: unknown; cb: (interrupted?: boolean) => void }[] = [];\n\n  const interrupt = () => {\n    // If another history operation was performed we need to interrupt existing ones\n    // This makes sure that calls such as `history.replace` after `history.go` don't happen\n    // Since otherwise it won't be correct if something else has changed\n    pending.forEach((it) => {\n      const cb = it.cb;\n      it.cb = () => cb(true);\n    });\n  };\n\n  const history = {\n    get index(): number {\n      // We store an id in the state instead of an index\n      // Index could get out of sync with in-memory values if page reloads\n      const id = window.history.state?.id;\n\n      if (id) {\n        const index = items.findIndex((item) => item.id === id);\n\n        return index > -1 ? index : 0;\n      }\n\n      return 0;\n    },\n\n    get(index: number) {\n      return items[index];\n    },\n\n    backIndex({ path }: { path: string }) {\n      // We need to find the index from the element before current to get closest path to go back to\n      for (let i = index - 1; i >= 0; i--) {\n        const item = items[i];\n\n        if (item.path === path) {\n          return i;\n        }\n      }\n\n      return -1;\n    },\n\n    push({ path, state }: { path: string; state: NavigationState }) {\n      interrupt();\n\n      const id = nanoid();\n\n      // When a new entry is pushed, all the existing entries after index will be inaccessible\n      // So we remove any existing entries after the current index to clean them up\n      items = items.slice(0, index + 1);\n\n      items.push({ path, state, id });\n      index = items.length - 1;\n\n      // We pass empty string for title because it's ignored in all browsers except safari\n      // We don't store state object in history.state because:\n      // - browsers have limits on how big it can be, and we don't control the size\n      // - while not recommended, there could be non-serializable data in state\n      window.history.pushState({ id }, '', path);\n    },\n\n    replace({ path, state }: { path: string; state: NavigationState }) {\n      interrupt();\n\n      const id = window.history.state?.id ?? nanoid();\n\n      if (!items.length || items.findIndex((item) => item.id === id) < 0) {\n        // There are two scenarios for creating an array with only one history record:\n        // - When loaded id not found in the items array, this function by default will replace\n        //   the first item. We need to keep only the new updated object, otherwise it will break\n        //   the page when navigating forward in history.\n        // - This is the first time any state modifications are done\n        //   So we need to push the entry as there's nothing to replace\n        items = [{ path, state, id }];\n        index = 0;\n      } else {\n        items[index] = { path, state, id };\n      }\n\n      window.history.replaceState({ id }, '', path);\n    },\n\n    // `history.go(n)` is asynchronous, there are couple of things to keep in mind:\n    // - it won't do anything if we can't go `n` steps, the `popstate` event won't fire.\n    // - each `history.go(n)` call will trigger a separate `popstate` event with correct location.\n    // - the `popstate` event fires before the next frame after calling `history.go(n)`.\n    // This method differs from `history.go(n)` in the sense that it'll go back as many steps it can.\n    go(n: number) {\n      interrupt();\n\n      if (n === 0) {\n        return;\n      }\n\n      // We shouldn't go back more than the 0 index (otherwise we'll exit the page)\n      // Or forward more than the available index (or the app will crash)\n      index =\n        n < 0 ? Math.max(index - n, 0) : Math.min(index + n, items.length - 1);\n\n      // When we call `history.go`, `popstate` will fire when there's history to go back to\n      // So we need to somehow handle following cases:\n      // - There's history to go back, `history.go` is called, and `popstate` fires\n      // - `history.go` is called multiple times, we need to resolve on respective `popstate`\n      // - No history to go back, but `history.go` was called, browser has no API to detect it\n      return new Promise<void>((resolve, reject) => {\n        const done = (interrupted?: boolean) => {\n          clearTimeout(timer);\n\n          if (interrupted) {\n            reject(new Error('History was changed during navigation.'));\n            return;\n          }\n\n          // There seems to be a bug in Chrome regarding updating the title\n          // If we set a title just before calling `history.go`, the title gets lost\n          // However the value of `document.title` is still what we set it to\n          // It's just not displayed in the tab bar\n          // To update the tab bar, we need to reset the title to something else first (e.g. '')\n          // And set the title to what it was before so it gets applied\n          // It won't work without setting it to empty string coz otherwise title isn't changing\n          // Which means that the browser won't do anything after setting the title\n          const { title } = window.document;\n\n          window.document.title = '';\n          window.document.title = title;\n\n          resolve();\n        };\n\n        pending.push({ ref: done, cb: done });\n\n        // If navigation didn't happen within 100ms, assume that it won't happen\n        // This may not be accurate, but hopefully it won't take so much time\n        // In Chrome, navigation seems to happen instantly in next microtask\n        // But on Firefox, it seems to take much longer, around 50ms from our testing\n        // We're using a hacky timeout since there doesn't seem to be way to know for sure\n        const timer = setTimeout(() => {\n          const index = pending.findIndex((it) => it.ref === done);\n\n          if (index > -1) {\n            pending[index].cb();\n            pending.splice(index, 1);\n          }\n        }, 100);\n\n        const onPopState = () => {\n          const id = window.history.state?.id;\n          const currentIndex = items.findIndex((item) => item.id === id);\n\n          // Fix createMemoryHistory.index variable's value\n          // as it may go out of sync when navigating in the browser.\n          index = Math.max(currentIndex, 0);\n\n          const last = pending.pop();\n\n          window.removeEventListener('popstate', onPopState);\n          last?.cb();\n        };\n\n        window.addEventListener('popstate', onPopState);\n        window.history.go(n);\n      });\n    },\n\n    // The `popstate` event is triggered when history changes, except `pushState` and `replaceState`\n    // If we call `history.go(n)` ourselves, we don't want it to trigger the listener\n    // Here we normalize it so that only external changes (e.g. user pressing back/forward) trigger the listener\n    listen(listener: () => void) {\n      const onPopState = () => {\n        if (pending.length) {\n          // This was triggered by `history.go(n)`, we shouldn't call the listener\n          return;\n        }\n\n        listener();\n      };\n\n      window.addEventListener('popstate', onPopState);\n\n      return () => window.removeEventListener('popstate', onPopState);\n    },\n  };\n\n  return history;\n};\n\n/**\n * Find the matching navigation state that changed between 2 navigation states\n * e.g.: a -> b -> c -> d and a -> b -> c -> e -> f, if history in b changed, b is the matching state\n */\nconst findMatchingState = <T extends NavigationState>(\n  a: T | undefined,\n  b: T | undefined\n): [T | undefined, T | undefined] => {\n  if (a === undefined || b === undefined || a.key !== b.key) {\n    return [undefined, undefined];\n  }\n\n  // Tab and drawer will have `history` property, but stack will have history in `routes`\n  const aHistoryLength = a.history ? a.history.length : a.routes.length;\n  const bHistoryLength = b.history ? b.history.length : b.routes.length;\n\n  const aRoute = a.routes[a.index];\n  const bRoute = b.routes[b.index];\n\n  const aChildState = aRoute.state as T | undefined;\n  const bChildState = bRoute.state as T | undefined;\n\n  // Stop here if this is the state object that changed:\n  // - history length is different\n  // - focused routes are different\n  // - one of them doesn't have child state\n  // - child state keys are different\n  if (\n    aHistoryLength !== bHistoryLength ||\n    aRoute.key !== bRoute.key ||\n    aChildState === undefined ||\n    bChildState === undefined ||\n    aChildState.key !== bChildState.key\n  ) {\n    return [a, b];\n  }\n\n  return findMatchingState(aChildState, bChildState);\n};\n\n/**\n * Run async function in series as it's called.\n */\nconst series = (cb: () => Promise<void>) => {\n  // Whether we're currently handling a callback\n  let handling = false;\n  let queue: (() => Promise<void>)[] = [];\n\n  const callback = async () => {\n    try {\n      if (handling) {\n        // If we're currently handling a previous event, wait before handling this one\n        // Add the callback to the beginning of the queue\n        queue.unshift(callback);\n        return;\n      }\n\n      handling = true;\n\n      await cb();\n    } finally {\n      handling = false;\n\n      if (queue.length) {\n        // If we have queued items, handle the last one\n        const last = queue.pop();\n\n        last?.();\n      }\n    }\n  };\n\n  return callback;\n};\n\nlet linkingHandlers: Symbol[] = [];\n\ntype Options = LinkingOptions<ParamListBase> & {\n  independent?: boolean;\n};\n\nexport default function useLinking(\n  ref: React.RefObject<NavigationContainerRef<ParamListBase>>,\n  {\n    independent,\n    enabled = true,\n    config,\n    getStateFromPath = getStateFromPathDefault,\n    getPathFromState = getPathFromStateDefault,\n    getActionFromState = getActionFromStateDefault,\n  }: Options\n) {\n  React.useEffect(() => {\n    if (process.env.NODE_ENV === 'production') {\n      return undefined;\n    }\n\n    if (independent) {\n      return undefined;\n    }\n\n    if (enabled !== false && linkingHandlers.length) {\n      console.error(\n        [\n          'Looks like you have configured linking in multiple places. This is likely an error since deep links should only be handled in one place to avoid conflicts. Make sure that:',\n          \"- You don't have multiple NavigationContainers in the app each with 'linking' enabled\",\n          '- Only a single instance of the root component is rendered',\n        ]\n          .join('\\n')\n          .trim()\n      );\n    }\n\n    const handler = Symbol();\n\n    if (enabled !== false) {\n      linkingHandlers.push(handler);\n    }\n\n    return () => {\n      const index = linkingHandlers.indexOf(handler);\n\n      if (index > -1) {\n        linkingHandlers.splice(index, 1);\n      }\n    };\n  }, [enabled, independent]);\n\n  const [history] = React.useState(createMemoryHistory);\n\n  // We store these options in ref to avoid re-creating getInitialState and re-subscribing listeners\n  // This lets user avoid wrapping the items in `React.useCallback` or `React.useMemo`\n  // Not re-creating `getInitialState` is important coz it makes it easier for the user to use in an effect\n  const enabledRef = React.useRef(enabled);\n  const configRef = React.useRef(config);\n  const getStateFromPathRef = React.useRef(getStateFromPath);\n  const getPathFromStateRef = React.useRef(getPathFromState);\n  const getActionFromStateRef = React.useRef(getActionFromState);\n\n  React.useEffect(() => {\n    enabledRef.current = enabled;\n    configRef.current = config;\n    getStateFromPathRef.current = getStateFromPath;\n    getPathFromStateRef.current = getPathFromState;\n    getActionFromStateRef.current = getActionFromState;\n  });\n\n  const server = React.useContext(ServerContext);\n\n  const getInitialState = React.useCallback(() => {\n    let value: ResultState | undefined;\n\n    if (enabledRef.current) {\n      const location =\n        server?.location ??\n        (typeof window !== 'undefined' ? window.location : undefined);\n\n      const path = location ? location.pathname + location.search : undefined;\n\n      if (path) {\n        value = getStateFromPathRef.current(path, configRef.current);\n      }\n    }\n\n    const thenable = {\n      then(onfulfilled?: (state: ResultState | undefined) => void) {\n        return Promise.resolve(onfulfilled ? onfulfilled(value) : value);\n      },\n      catch() {\n        return thenable;\n      },\n    };\n\n    return thenable as PromiseLike<ResultState | undefined>;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const previousIndexRef = React.useRef<number | undefined>(undefined);\n  const previousStateRef = React.useRef<NavigationState | undefined>(undefined);\n  const pendingPopStatePathRef = React.useRef<string | undefined>(undefined);\n\n  React.useEffect(() => {\n    previousIndexRef.current = history.index;\n\n    return history.listen(() => {\n      const navigation = ref.current;\n\n      if (!navigation || !enabled) {\n        return;\n      }\n\n      const path = location.pathname + location.search;\n      const index = history.index;\n\n      const previousIndex = previousIndexRef.current ?? 0;\n\n      previousIndexRef.current = index;\n      pendingPopStatePathRef.current = path;\n\n      // When browser back/forward is clicked, we first need to check if state object for this index exists\n      // If it does we'll reset to that state object\n      // Otherwise, we'll handle it like a regular deep link\n      const record = history.get(index);\n\n      if (record?.path === path && record?.state) {\n        navigation.resetRoot(record.state);\n        return;\n      }\n\n      const state = getStateFromPathRef.current(path, configRef.current);\n\n      // We should only dispatch an action when going forward\n      // Otherwise the action will likely add items to history, which would mess things up\n      if (state) {\n        // Make sure that the routes in the state exist in the root navigator\n        // Otherwise there's an error in the linking configuration\n        const rootState = navigation.getRootState();\n\n        if (state.routes.some((r) => !rootState?.routeNames.includes(r.name))) {\n          console.warn(\n            \"The navigation state parsed from the URL contains routes not present in the root navigator. This usually means that the linking configuration doesn't match the navigation structure. See https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.\"\n          );\n          return;\n        }\n\n        if (index > previousIndex) {\n          const action = getActionFromStateRef.current(\n            state,\n            configRef.current\n          );\n\n          if (action !== undefined) {\n            try {\n              navigation.dispatch(action);\n            } catch (e) {\n              // Ignore any errors from deep linking.\n              // This could happen in case of malformed links, navigation object not being initialized etc.\n              console.warn(\n                `An error occurred when trying to handle the link '${path}': ${\n                  typeof e === 'object' && e != null && 'message' in e\n                    ? // @ts-expect-error: we're already checking for this\n                      e.message\n                    : e\n                }`\n              );\n            }\n          } else {\n            navigation.resetRoot(state);\n          }\n        } else {\n          navigation.resetRoot(state);\n        }\n      } else {\n        // if current path didn't return any state, we should revert to initial state\n        navigation.resetRoot(state);\n      }\n    });\n  }, [enabled, history, ref]);\n\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n\n    const getPathForRoute = (\n      route: ReturnType<typeof findFocusedRoute>,\n      state: NavigationState\n    ): string => {\n      // If the `route` object contains a `path`, use that path as long as `route.name` and `params` still match\n      // This makes sure that we preserve the original URL for wildcard routes\n      if (route?.path) {\n        const stateForPath = getStateFromPathRef.current(\n          route.path,\n          configRef.current\n        );\n\n        if (stateForPath) {\n          const focusedRoute = findFocusedRoute(stateForPath);\n\n          if (\n            focusedRoute &&\n            focusedRoute.name === route.name &&\n            isEqual(focusedRoute.params, route.params)\n          ) {\n            return route.path;\n          }\n        }\n      }\n\n      return getPathFromStateRef.current(state, configRef.current);\n    };\n\n    if (ref.current) {\n      // We need to record the current metadata on the first render if they aren't set\n      // This will allow the initial state to be in the history entry\n      const state = ref.current.getRootState();\n\n      if (state) {\n        const route = findFocusedRoute(state);\n        const path = getPathForRoute(route, state);\n\n        if (previousStateRef.current === undefined) {\n          previousStateRef.current = state;\n        }\n\n        history.replace({ path, state });\n      }\n    }\n\n    const onStateChange = async () => {\n      const navigation = ref.current;\n\n      if (!navigation || !enabled) {\n        return;\n      }\n\n      const previousState = previousStateRef.current;\n      const state = navigation.getRootState();\n\n      // root state may not available, for example when root navigators switch inside the container\n      if (!state) {\n        return;\n      }\n\n      const pendingPath = pendingPopStatePathRef.current;\n      const route = findFocusedRoute(state);\n      const path = getPathForRoute(route, state);\n\n      previousStateRef.current = state;\n      pendingPopStatePathRef.current = undefined;\n\n      // To detect the kind of state change, we need to:\n      // - Find the common focused navigation state in previous and current state\n      // - If only the route keys changed, compare history/routes.length to check if we go back/forward/replace\n      // - If no common focused navigation state found, it's a replace\n      const [previousFocusedState, focusedState] = findMatchingState(\n        previousState,\n        state\n      );\n\n      if (\n        previousFocusedState &&\n        focusedState &&\n        // We should only handle push/pop if path changed from what was in last `popstate`\n        // Otherwise it's likely a change triggered by `popstate`\n        path !== pendingPath\n      ) {\n        const historyDelta =\n          (focusedState.history\n            ? focusedState.history.length\n            : focusedState.routes.length) -\n          (previousFocusedState.history\n            ? previousFocusedState.history.length\n            : previousFocusedState.routes.length);\n\n        if (historyDelta > 0) {\n          // If history length is increased, we should pushState\n          // Note that path might not actually change here, for example, drawer open should pushState\n          history.push({ path, state });\n        } else if (historyDelta < 0) {\n          // If history length is decreased, i.e. entries were removed, we want to go back\n\n          const nextIndex = history.backIndex({ path });\n          const currentIndex = history.index;\n\n          try {\n            if (nextIndex !== -1 && nextIndex < currentIndex) {\n              // An existing entry for this path exists and it's less than current index, go back to that\n              await history.go(nextIndex - currentIndex);\n            } else {\n              // We couldn't find an existing entry to go back to, so we'll go back by the delta\n              // This won't be correct if multiple routes were pushed in one go before\n              // Usually this shouldn't happen and this is a fallback for that\n              await history.go(historyDelta);\n            }\n\n            // Store the updated state as well as fix the path if incorrect\n            history.replace({ path, state });\n          } catch (e) {\n            // The navigation was interrupted\n          }\n        } else {\n          // If history length is unchanged, we want to replaceState\n          history.replace({ path, state });\n        }\n      } else {\n        // If no common navigation state was found, assume it's a replace\n        // This would happen if the user did a reset/conditionally changed navigators\n        history.replace({ path, state });\n      }\n    };\n\n    // We debounce onStateChange coz we don't want multiple state changes to be handled at one time\n    // This could happen since `history.go(n)` is asynchronous\n    // If `pushState` or `replaceState` were called before `history.go(n)` completes, it'll mess stuff up\n    return ref.current?.addListener('state', series(onStateChange));\n  });\n\n  return {\n    getInitialState,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}