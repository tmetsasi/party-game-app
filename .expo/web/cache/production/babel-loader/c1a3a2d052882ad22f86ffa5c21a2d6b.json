{"ast":null,"code":"import*as React from'react';var MULTIPLE_NAVIGATOR_ERROR=\"Another navigator is already registered for this container. You likely have multiple navigators under a single \\\"NavigationContainer\\\" or \\\"Screen\\\". Make sure each navigator is under a separate \\\"Screen\\\" container. See https://reactnavigation.org/docs/nesting-navigators for a guide on nesting.\";export var SingleNavigatorContext=React.createContext(undefined);export default function EnsureSingleNavigator(_ref){var children=_ref.children;var navigatorKeyRef=React.useRef();var value=React.useMemo(function(){return{register:function register(key){var currentKey=navigatorKeyRef.current;if(currentKey!==undefined&&key!==currentKey){throw new Error(MULTIPLE_NAVIGATOR_ERROR);}navigatorKeyRef.current=key;},unregister:function unregister(key){var currentKey=navigatorKeyRef.current;if(key!==currentKey){return;}navigatorKeyRef.current=undefined;}};},[]);return React.createElement(SingleNavigatorContext.Provider,{value:value},children);}","map":{"version":3,"mappings":"AAAA,MAAO,GAAKA,MAAZ,KAAuB,OAAvB,CAMA,GAAMC,yBAAwB,2SAA9B,CAEA,MAAO,IAAMC,uBAAsB,CAAGF,KAAK,CAACG,aAAN,CAMpCC,SANoC,CAA/B,CAWP,cAAe,SAASC,sBAAT,MAAoD,IAAnBC,UAAmBC,KAAnBD,SAC9C,GAAME,gBAAe,CAAGR,KAAK,CAACS,MAAN,EAAxB,CAEA,GAAMC,MAAK,CAAGV,KAAK,CAACW,OAAN,CACZ,iBAAO,CACLC,QAAQ,mBAACC,GAAD,CAAc,CACpB,GAAMC,WAAU,CAAGN,eAAe,CAACO,OAAnC,CAEA,GAAID,UAAU,GAAKV,SAAf,EAA4BS,GAAG,GAAKC,UAAxC,CAAoD,CAClD,KAAM,IAAIE,MAAJ,CAAUf,wBAAV,CAAN,CACD,CAEDO,eAAe,CAACO,OAAhB,CAA0BF,GAA1B,CACD,CATI,CAULI,UAAU,qBAACJ,GAAD,CAAc,CACtB,GAAMC,WAAU,CAAGN,eAAe,CAACO,OAAnC,CAEA,GAAIF,GAAG,GAAKC,UAAZ,CAAwB,CACtB,OACD,CAEDN,eAAe,CAACO,OAAhB,CAA0BX,SAA1B,CACD,CAlBI,CAAP,EADY,CAqBZ,EArBY,CAAd,CAwBA,MACEJ,qBAACE,sBAAD,CAAwBgB,QAAxB,EAAiCR,KAAK,CAAEA,KAAxC,EACGJ,QADH,CADF,CAKD","names":["React","MULTIPLE_NAVIGATOR_ERROR","SingleNavigatorContext","createContext","undefined","EnsureSingleNavigator","children","_ref","navigatorKeyRef","useRef","value","useMemo","register","key","currentKey","current","Error","unregister","Provider"],"sources":["EnsureSingleNavigator.tsx"],"sourcesContent":["import * as React from 'react';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst MULTIPLE_NAVIGATOR_ERROR = `Another navigator is already registered for this container. You likely have multiple navigators under a single \"NavigationContainer\" or \"Screen\". Make sure each navigator is under a separate \"Screen\" container. See https://reactnavigation.org/docs/nesting-navigators for a guide on nesting.`;\n\nexport const SingleNavigatorContext = React.createContext<\n  | {\n      register(key: string): void;\n      unregister(key: string): void;\n    }\n  | undefined\n>(undefined);\n\n/**\n * Component which ensures that there's only one navigator nested under it.\n */\nexport default function EnsureSingleNavigator({ children }: Props) {\n  const navigatorKeyRef = React.useRef<string | undefined>();\n\n  const value = React.useMemo(\n    () => ({\n      register(key: string) {\n        const currentKey = navigatorKeyRef.current;\n\n        if (currentKey !== undefined && key !== currentKey) {\n          throw new Error(MULTIPLE_NAVIGATOR_ERROR);\n        }\n\n        navigatorKeyRef.current = key;\n      },\n      unregister(key: string) {\n        const currentKey = navigatorKeyRef.current;\n\n        if (key !== currentKey) {\n          return;\n        }\n\n        navigatorKeyRef.current = undefined;\n      },\n    }),\n    []\n  );\n\n  return (\n    <SingleNavigatorContext.Provider value={value}>\n      {children}\n    </SingleNavigatorContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}